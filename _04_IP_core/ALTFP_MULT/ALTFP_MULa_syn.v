// megafunction wizard: %ALTFP_MULT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: ALTFP_MULT 

// ============================================================
// File Name: ALTFP_MULa.v
// Megafunction Name(s):
// 			ALTFP_MULT
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 18.0.0 Build 614 04/24/2018 SJ Standard Edition
// ************************************************************


//Copyright (C) 2018  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details.


//altfp_mult DEDICATED_MULTIPLIER_CIRCUITRY="YES" DENORMAL_SUPPORT="NO" DEVICE_FAMILY="Cyclone IV E" EXCEPTION_HANDLING="NO" PIPELINE=5 REDUCED_FUNCTIONALITY="NO" ROUNDING="TO_NEAREST" WIDTH_EXP=11 WIDTH_MAN=52 clock dataa datab result
//VERSION_BEGIN 18.0 cbx_alt_ded_mult_y 2018:04:24:18:04:18:SJ cbx_altbarrel_shift 2018:04:24:18:04:18:SJ cbx_altera_mult_add 2018:04:24:18:04:18:SJ cbx_altera_mult_add_rtl 2018:04:24:18:04:18:SJ cbx_altfp_mult 2018:04:24:18:04:18:SJ cbx_altmult_add 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_mult 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_padd 2018:04:24:18:04:18:SJ cbx_parallel_add 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=1 LPM_WIDTH=12 aclr cin clken clock dataa datab result
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_WIDTH=13 cin dataa datab result
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_DIRECTION="SUB" LPM_PIPELINE=0 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 dataa datab result
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=0 LPM_WIDTH=54 dataa datab result
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


//lpm_mult DEDICATED_MULTIPLIER_CIRCUITRY="YES" DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=53 LPM_WIDTHB=53 LPM_WIDTHP=106 LPM_WIDTHS=1 aclr clken clock dataa datab result
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_mult 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_padd 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=73 dataa datab result
//VERSION_BEGIN 18.0 cbx_mgl 2018:04:24:18:08:49:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=89 dataa datab result
//VERSION_BEGIN 18.0 cbx_mgl 2018:04:24:18:08:49:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=36 dataa datab result
//VERSION_BEGIN 18.0 cbx_mgl 2018:04:24:18:08:49:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=54 dataa datab result
//VERSION_BEGIN 18.0 cbx_mgl 2018:04:24:18:08:49:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END

//synthesis_resources = dsp_9bit 18 lut 252 reg 284 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTFP_MULa_mult
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [52:0]  dataa;
	input   [52:0]  datab;
	output   [105:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[72:0]	wire_add303_result;
	wire	[88:0]	wire_add307_result;
	wire	[35:0]	wire_add311_result;
	wire	[53:0]	wire_add315_result;
	wire  [35:0]   wire_mac_mult1_dataout;
	wire  [34:0]   wire_mac_mult11_dataout;
	wire  [34:0]   wire_mac_mult13_dataout;
	wire  [34:0]   wire_mac_mult15_dataout;
	wire  [33:0]   wire_mac_mult17_dataout;
	wire  [35:0]   wire_mac_mult3_dataout;
	wire  [34:0]   wire_mac_mult5_dataout;
	wire  [35:0]   wire_mac_mult7_dataout;
	wire  [35:0]   wire_mac_mult9_dataout;
	wire  [35:0]   wire_mac_out10_dataout;
	wire  [34:0]   wire_mac_out12_dataout;
	wire  [34:0]   wire_mac_out14_dataout;
	wire  [34:0]   wire_mac_out16_dataout;
	wire  [33:0]   wire_mac_out18_dataout;
	wire  [35:0]   wire_mac_out2_dataout;
	wire  [35:0]   wire_mac_out4_dataout;
	wire  [34:0]   wire_mac_out6_dataout;
	wire  [35:0]   wire_mac_out8_dataout;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe100;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe101;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe102;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe103;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe104;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe105;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe106;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe107;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe108;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe109;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe110;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe111;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe112;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe113;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe114;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe115;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe116;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe117;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe118;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe119;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe120;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe121;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe122;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe123;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe124;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe125;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe126;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe127;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe128;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe129;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe130;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe131;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe132;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe133;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe134;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe135;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe136;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe137;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe138;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe139;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe140;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe141;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe142;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe143;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe144;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe145;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe146;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe147;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe148;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe149;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe150;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe151;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe152;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe153;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe154;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe155;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe156;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe157;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe158;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe159;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe160;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe161;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe162;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe163;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe164;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe165;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe166;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe167;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe168;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe169;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe170;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe171;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe172;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe173;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe174;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe175;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe176;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe177;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe178;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe179;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe180;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe181;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe182;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe183;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe184;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe185;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe186;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe187;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe188;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe189;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe19;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe190;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe191;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe192;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe193;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe194;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe195;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe196;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe197;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe198;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe199;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe20;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe200;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe201;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe202;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe203;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe204;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe205;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe206;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe207;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe208;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe209;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe21;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe210;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe211;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe212;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe213;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe214;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe215;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe216;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe217;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe218;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe219;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe22;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe220;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe221;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe222;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe223;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe224;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe225;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe226;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe227;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe228;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe229;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe23;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe230;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe231;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe232;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe233;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe234;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe235;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe236;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe237;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe238;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe239;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe24;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe240;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe241;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe242;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe243;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe244;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe245;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe246;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe247;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe248;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe249;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe25;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe250;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe251;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe252;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe253;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe254;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe255;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe256;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe257;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe258;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe259;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe26;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe260;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe261;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe262;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe263;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe264;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe265;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe266;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe267;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe268;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe269;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe27;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe270;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe271;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe272;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe273;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe274;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe275;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe276;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe277;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe278;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe279;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe28;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe280;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe281;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe282;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe283;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe284;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe285;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe286;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe287;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe288;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe289;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe29;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe290;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe291;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe292;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe293;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe294;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe295;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe296;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe297;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe298;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe299;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe30;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe300;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe301;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe302;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe31;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe32;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe33;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe34;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe35;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe36;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe37;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe38;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe39;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe40;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe41;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe42;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe43;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe44;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe45;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe46;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe47;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe48;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe49;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe50;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe51;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe52;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe53;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe54;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe55;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe56;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe57;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe58;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe59;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe60;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe61;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe62;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe63;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe64;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe65;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe66;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe67;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe68;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe69;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe70;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe71;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe72;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe73;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe74;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe75;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe76;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe77;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe78;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe79;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe80;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe81;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe82;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe83;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe84;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe85;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe86;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe87;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe88;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe89;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe90;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe91;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe92;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe93;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe94;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe95;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe96;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe97;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe98;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe99;
	wire  [72:0]   wire_sft304a_in;
	wire  [72:0]   wire_sft304a_out;
	wire  [72:0]   wire_sft305a_in;
	wire  [72:0]   wire_sft305a_out;
	wire  [72:0]   wire_sft306a_in;
	wire  [72:0]   wire_sft306a_out;
	wire  [88:0]   wire_sft308a_in;
	wire  [88:0]   wire_sft308a_out;
	wire  [88:0]   wire_sft309a_in;
	wire  [88:0]   wire_sft309a_out;
	wire  [88:0]   wire_sft310a_in;
	wire  [88:0]   wire_sft310a_out;
	wire  [35:0]   wire_sft312a_in;
	wire  [35:0]   wire_sft312a_out;
	wire  [35:0]   wire_sft313a_in;
	wire  [35:0]   wire_sft313a_out;
	wire  [35:0]   wire_sft314a_in;
	wire  [35:0]   wire_sft314a_out;
	wire  [53:0]   wire_sft316a_in;
	wire  [53:0]   wire_sft316a_out;
	wire  [53:0]   wire_sft317a_in;
	wire  [53:0]   wire_sft317a_out;
	wire  [53:0]   wire_sft318a_in;
	wire  [53:0]   wire_sft318a_out;
	wire  w1455w;
	wire  [106:0]  w2206w;

	assign
		wire_add303_result = wire_sft304a_out + wire_sft305a_out;
	assign
		wire_add307_result = wire_sft308a_out + wire_sft309a_out;
	assign
		wire_add311_result = wire_sft312a_out + wire_sft313a_out;
	assign
		wire_add315_result = wire_sft316a_out + wire_sft317a_out;
	cycloneive_mac_mult   mac_mult1
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult1_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult1.dataa_clock = "none",
		mac_mult1.dataa_width = 18,
		mac_mult1.datab_clock = "none",
		mac_mult1.datab_width = 18,
		mac_mult1.signa_clock = "none",
		mac_mult1.signb_clock = "none",
		mac_mult1.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult11
	( 
	.dataa({dataa[35:18]}),
	.datab({datab[52:36]}),
	.dataout(wire_mac_mult11_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult11.dataa_clock = "none",
		mac_mult11.dataa_width = 18,
		mac_mult11.datab_clock = "none",
		mac_mult11.datab_width = 17,
		mac_mult11.signa_clock = "none",
		mac_mult11.signb_clock = "none",
		mac_mult11.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult13
	( 
	.dataa({dataa[52:36]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult13_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult13.dataa_clock = "none",
		mac_mult13.dataa_width = 17,
		mac_mult13.datab_clock = "none",
		mac_mult13.datab_width = 18,
		mac_mult13.signa_clock = "none",
		mac_mult13.signb_clock = "none",
		mac_mult13.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult15
	( 
	.dataa({dataa[52:36]}),
	.datab({datab[35:18]}),
	.dataout(wire_mac_mult15_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult15.dataa_clock = "none",
		mac_mult15.dataa_width = 17,
		mac_mult15.datab_clock = "none",
		mac_mult15.datab_width = 18,
		mac_mult15.signa_clock = "none",
		mac_mult15.signb_clock = "none",
		mac_mult15.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult17
	( 
	.dataa({dataa[52:36]}),
	.datab({datab[52:36]}),
	.dataout(wire_mac_mult17_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult17.dataa_clock = "none",
		mac_mult17.dataa_width = 17,
		mac_mult17.datab_clock = "none",
		mac_mult17.datab_width = 17,
		mac_mult17.signa_clock = "none",
		mac_mult17.signb_clock = "none",
		mac_mult17.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult3
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[35:18]}),
	.dataout(wire_mac_mult3_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult3.dataa_clock = "none",
		mac_mult3.dataa_width = 18,
		mac_mult3.datab_clock = "none",
		mac_mult3.datab_width = 18,
		mac_mult3.signa_clock = "none",
		mac_mult3.signb_clock = "none",
		mac_mult3.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult5
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[52:36]}),
	.dataout(wire_mac_mult5_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult5.dataa_clock = "none",
		mac_mult5.dataa_width = 18,
		mac_mult5.datab_clock = "none",
		mac_mult5.datab_width = 17,
		mac_mult5.signa_clock = "none",
		mac_mult5.signb_clock = "none",
		mac_mult5.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult7
	( 
	.dataa({dataa[35:18]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult7_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult7.dataa_clock = "none",
		mac_mult7.dataa_width = 18,
		mac_mult7.datab_clock = "none",
		mac_mult7.datab_width = 18,
		mac_mult7.signa_clock = "none",
		mac_mult7.signb_clock = "none",
		mac_mult7.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult9
	( 
	.dataa({dataa[35:18]}),
	.datab({datab[35:18]}),
	.dataout(wire_mac_mult9_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult9.dataa_clock = "none",
		mac_mult9.dataa_width = 18,
		mac_mult9.datab_clock = "none",
		mac_mult9.datab_width = 18,
		mac_mult9.signa_clock = "none",
		mac_mult9.signb_clock = "none",
		mac_mult9.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_out   mac_out10
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult9_dataout),
	.dataout(wire_mac_out10_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out10.dataa_width = 36,
		mac_out10.output_clock = "0",
		mac_out10.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out12
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult11_dataout),
	.dataout(wire_mac_out12_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out12.dataa_width = 35,
		mac_out12.output_clock = "0",
		mac_out12.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out14
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult13_dataout),
	.dataout(wire_mac_out14_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out14.dataa_width = 35,
		mac_out14.output_clock = "0",
		mac_out14.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out16
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult15_dataout),
	.dataout(wire_mac_out16_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out16.dataa_width = 35,
		mac_out16.output_clock = "0",
		mac_out16.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out18
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult17_dataout),
	.dataout(wire_mac_out18_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out18.dataa_width = 34,
		mac_out18.output_clock = "0",
		mac_out18.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out2
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult1_dataout),
	.dataout(wire_mac_out2_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out2.dataa_width = 36,
		mac_out2.output_clock = "0",
		mac_out2.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out4
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult3_dataout),
	.dataout(wire_mac_out4_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out4.dataa_width = 36,
		mac_out4.output_clock = "0",
		mac_out4.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out6
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult5_dataout),
	.dataout(wire_mac_out6_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out6.dataa_width = 35,
		mac_out6.output_clock = "0",
		mac_out6.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out8
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult7_dataout),
	.dataout(wire_mac_out8_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out8.dataa_width = 36,
		mac_out8.output_clock = "0",
		mac_out8.lpm_type = "cycloneive_mac_out";
	// synopsys translate_off
	initial
		dffe100 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe100 <= 1'b0;
		else if  (clken == 1'b1)   dffe100 <= wire_sft314a_out[2];
	// synopsys translate_off
	initial
		dffe101 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe101 <= 1'b0;
		else if  (clken == 1'b1)   dffe101 <= wire_mac_out10_dataout[2];
	// synopsys translate_off
	initial
		dffe102 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe102 <= 1'b0;
		else if  (clken == 1'b1)   dffe102 <= wire_mac_out4_dataout[20];
	// synopsys translate_off
	initial
		dffe103 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe103 <= 1'b0;
		else if  (clken == 1'b1)   dffe103 <= wire_mac_out8_dataout[21];
	// synopsys translate_off
	initial
		dffe104 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe104 <= 1'b0;
		else if  (clken == 1'b1)   dffe104 <= wire_sft314a_out[3];
	// synopsys translate_off
	initial
		dffe105 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe105 <= 1'b0;
		else if  (clken == 1'b1)   dffe105 <= wire_mac_out10_dataout[3];
	// synopsys translate_off
	initial
		dffe106 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe106 <= 1'b0;
		else if  (clken == 1'b1)   dffe106 <= wire_mac_out4_dataout[21];
	// synopsys translate_off
	initial
		dffe107 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe107 <= 1'b0;
		else if  (clken == 1'b1)   dffe107 <= wire_mac_out8_dataout[22];
	// synopsys translate_off
	initial
		dffe108 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe108 <= 1'b0;
		else if  (clken == 1'b1)   dffe108 <= wire_sft314a_out[4];
	// synopsys translate_off
	initial
		dffe109 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe109 <= 1'b0;
		else if  (clken == 1'b1)   dffe109 <= wire_mac_out10_dataout[4];
	// synopsys translate_off
	initial
		dffe110 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe110 <= 1'b0;
		else if  (clken == 1'b1)   dffe110 <= wire_mac_out4_dataout[22];
	// synopsys translate_off
	initial
		dffe111 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe111 <= 1'b0;
		else if  (clken == 1'b1)   dffe111 <= wire_mac_out8_dataout[23];
	// synopsys translate_off
	initial
		dffe112 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe112 <= 1'b0;
		else if  (clken == 1'b1)   dffe112 <= wire_sft314a_out[5];
	// synopsys translate_off
	initial
		dffe113 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe113 <= 1'b0;
		else if  (clken == 1'b1)   dffe113 <= wire_mac_out10_dataout[5];
	// synopsys translate_off
	initial
		dffe114 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe114 <= 1'b0;
		else if  (clken == 1'b1)   dffe114 <= wire_mac_out4_dataout[23];
	// synopsys translate_off
	initial
		dffe115 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe115 <= 1'b0;
		else if  (clken == 1'b1)   dffe115 <= wire_mac_out8_dataout[24];
	// synopsys translate_off
	initial
		dffe116 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe116 <= 1'b0;
		else if  (clken == 1'b1)   dffe116 <= wire_sft314a_out[6];
	// synopsys translate_off
	initial
		dffe117 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe117 <= 1'b0;
		else if  (clken == 1'b1)   dffe117 <= wire_mac_out10_dataout[6];
	// synopsys translate_off
	initial
		dffe118 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe118 <= 1'b0;
		else if  (clken == 1'b1)   dffe118 <= wire_mac_out4_dataout[24];
	// synopsys translate_off
	initial
		dffe119 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe119 <= 1'b0;
		else if  (clken == 1'b1)   dffe119 <= wire_mac_out8_dataout[25];
	// synopsys translate_off
	initial
		dffe120 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe120 <= 1'b0;
		else if  (clken == 1'b1)   dffe120 <= wire_sft314a_out[7];
	// synopsys translate_off
	initial
		dffe121 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe121 <= 1'b0;
		else if  (clken == 1'b1)   dffe121 <= wire_mac_out10_dataout[7];
	// synopsys translate_off
	initial
		dffe122 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe122 <= 1'b0;
		else if  (clken == 1'b1)   dffe122 <= wire_mac_out4_dataout[25];
	// synopsys translate_off
	initial
		dffe123 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe123 <= 1'b0;
		else if  (clken == 1'b1)   dffe123 <= wire_mac_out8_dataout[26];
	// synopsys translate_off
	initial
		dffe124 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe124 <= 1'b0;
		else if  (clken == 1'b1)   dffe124 <= wire_sft314a_out[8];
	// synopsys translate_off
	initial
		dffe125 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe125 <= 1'b0;
		else if  (clken == 1'b1)   dffe125 <= wire_mac_out10_dataout[8];
	// synopsys translate_off
	initial
		dffe126 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe126 <= 1'b0;
		else if  (clken == 1'b1)   dffe126 <= wire_mac_out4_dataout[26];
	// synopsys translate_off
	initial
		dffe127 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe127 <= 1'b0;
		else if  (clken == 1'b1)   dffe127 <= wire_mac_out8_dataout[27];
	// synopsys translate_off
	initial
		dffe128 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe128 <= 1'b0;
		else if  (clken == 1'b1)   dffe128 <= wire_sft314a_out[9];
	// synopsys translate_off
	initial
		dffe129 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe129 <= 1'b0;
		else if  (clken == 1'b1)   dffe129 <= wire_mac_out10_dataout[9];
	// synopsys translate_off
	initial
		dffe130 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe130 <= 1'b0;
		else if  (clken == 1'b1)   dffe130 <= wire_mac_out4_dataout[27];
	// synopsys translate_off
	initial
		dffe131 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe131 <= 1'b0;
		else if  (clken == 1'b1)   dffe131 <= wire_mac_out8_dataout[28];
	// synopsys translate_off
	initial
		dffe132 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe132 <= 1'b0;
		else if  (clken == 1'b1)   dffe132 <= wire_sft314a_out[10];
	// synopsys translate_off
	initial
		dffe133 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe133 <= 1'b0;
		else if  (clken == 1'b1)   dffe133 <= wire_mac_out10_dataout[10];
	// synopsys translate_off
	initial
		dffe134 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe134 <= 1'b0;
		else if  (clken == 1'b1)   dffe134 <= wire_mac_out4_dataout[28];
	// synopsys translate_off
	initial
		dffe135 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe135 <= 1'b0;
		else if  (clken == 1'b1)   dffe135 <= wire_mac_out8_dataout[29];
	// synopsys translate_off
	initial
		dffe136 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe136 <= 1'b0;
		else if  (clken == 1'b1)   dffe136 <= wire_sft314a_out[11];
	// synopsys translate_off
	initial
		dffe137 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe137 <= 1'b0;
		else if  (clken == 1'b1)   dffe137 <= wire_mac_out10_dataout[11];
	// synopsys translate_off
	initial
		dffe138 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe138 <= 1'b0;
		else if  (clken == 1'b1)   dffe138 <= wire_mac_out4_dataout[29];
	// synopsys translate_off
	initial
		dffe139 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe139 <= 1'b0;
		else if  (clken == 1'b1)   dffe139 <= wire_mac_out8_dataout[30];
	// synopsys translate_off
	initial
		dffe140 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe140 <= 1'b0;
		else if  (clken == 1'b1)   dffe140 <= wire_sft314a_out[12];
	// synopsys translate_off
	initial
		dffe141 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe141 <= 1'b0;
		else if  (clken == 1'b1)   dffe141 <= wire_mac_out10_dataout[12];
	// synopsys translate_off
	initial
		dffe142 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe142 <= 1'b0;
		else if  (clken == 1'b1)   dffe142 <= wire_mac_out4_dataout[30];
	// synopsys translate_off
	initial
		dffe143 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe143 <= 1'b0;
		else if  (clken == 1'b1)   dffe143 <= wire_mac_out8_dataout[31];
	// synopsys translate_off
	initial
		dffe144 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe144 <= 1'b0;
		else if  (clken == 1'b1)   dffe144 <= wire_sft314a_out[13];
	// synopsys translate_off
	initial
		dffe145 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe145 <= 1'b0;
		else if  (clken == 1'b1)   dffe145 <= wire_mac_out10_dataout[13];
	// synopsys translate_off
	initial
		dffe146 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe146 <= 1'b0;
		else if  (clken == 1'b1)   dffe146 <= wire_mac_out4_dataout[31];
	// synopsys translate_off
	initial
		dffe147 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe147 <= 1'b0;
		else if  (clken == 1'b1)   dffe147 <= wire_mac_out8_dataout[32];
	// synopsys translate_off
	initial
		dffe148 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe148 <= 1'b0;
		else if  (clken == 1'b1)   dffe148 <= wire_sft314a_out[14];
	// synopsys translate_off
	initial
		dffe149 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe149 <= 1'b0;
		else if  (clken == 1'b1)   dffe149 <= wire_mac_out10_dataout[14];
	// synopsys translate_off
	initial
		dffe150 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe150 <= 1'b0;
		else if  (clken == 1'b1)   dffe150 <= wire_mac_out4_dataout[32];
	// synopsys translate_off
	initial
		dffe151 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe151 <= 1'b0;
		else if  (clken == 1'b1)   dffe151 <= wire_mac_out8_dataout[33];
	// synopsys translate_off
	initial
		dffe152 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe152 <= 1'b0;
		else if  (clken == 1'b1)   dffe152 <= wire_sft314a_out[15];
	// synopsys translate_off
	initial
		dffe153 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe153 <= 1'b0;
		else if  (clken == 1'b1)   dffe153 <= wire_mac_out10_dataout[15];
	// synopsys translate_off
	initial
		dffe154 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe154 <= 1'b0;
		else if  (clken == 1'b1)   dffe154 <= wire_mac_out4_dataout[33];
	// synopsys translate_off
	initial
		dffe155 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe155 <= 1'b0;
		else if  (clken == 1'b1)   dffe155 <= wire_mac_out8_dataout[34];
	// synopsys translate_off
	initial
		dffe156 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe156 <= 1'b0;
		else if  (clken == 1'b1)   dffe156 <= wire_sft314a_out[16];
	// synopsys translate_off
	initial
		dffe157 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe157 <= 1'b0;
		else if  (clken == 1'b1)   dffe157 <= wire_mac_out10_dataout[16];
	// synopsys translate_off
	initial
		dffe158 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe158 <= 1'b0;
		else if  (clken == 1'b1)   dffe158 <= wire_mac_out4_dataout[34];
	// synopsys translate_off
	initial
		dffe159 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe159 <= 1'b0;
		else if  (clken == 1'b1)   dffe159 <= wire_mac_out8_dataout[35];
	// synopsys translate_off
	initial
		dffe160 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe160 <= 1'b0;
		else if  (clken == 1'b1)   dffe160 <= wire_sft314a_out[17];
	// synopsys translate_off
	initial
		dffe161 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe161 <= 1'b0;
		else if  (clken == 1'b1)   dffe161 <= wire_mac_out10_dataout[17];
	// synopsys translate_off
	initial
		dffe162 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe162 <= 1'b0;
		else if  (clken == 1'b1)   dffe162 <= wire_mac_out4_dataout[35];
	// synopsys translate_off
	initial
		dffe163 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe163 <= 1'b0;
		else if  (clken == 1'b1)   dffe163 <= wire_mac_out12_dataout[0];
	// synopsys translate_off
	initial
		dffe164 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe164 <= 1'b0;
		else if  (clken == 1'b1)   dffe164 <= wire_sft314a_out[18];
	// synopsys translate_off
	initial
		dffe165 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe165 <= 1'b0;
		else if  (clken == 1'b1)   dffe165 <= wire_mac_out14_dataout[18];
	// synopsys translate_off
	initial
		dffe166 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe166 <= 1'b0;
		else if  (clken == 1'b1)   dffe166 <= wire_mac_out6_dataout[18];
	// synopsys translate_off
	initial
		dffe167 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe167 <= 1'b0;
		else if  (clken == 1'b1)   dffe167 <= wire_mac_out12_dataout[1];
	// synopsys translate_off
	initial
		dffe168 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe168 <= 1'b0;
		else if  (clken == 1'b1)   dffe168 <= wire_sft314a_out[19];
	// synopsys translate_off
	initial
		dffe169 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe169 <= 1'b0;
		else if  (clken == 1'b1)   dffe169 <= wire_mac_out14_dataout[19];
	// synopsys translate_off
	initial
		dffe170 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe170 <= 1'b0;
		else if  (clken == 1'b1)   dffe170 <= wire_mac_out6_dataout[19];
	// synopsys translate_off
	initial
		dffe171 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe171 <= 1'b0;
		else if  (clken == 1'b1)   dffe171 <= wire_mac_out12_dataout[2];
	// synopsys translate_off
	initial
		dffe172 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe172 <= 1'b0;
		else if  (clken == 1'b1)   dffe172 <= wire_sft314a_out[20];
	// synopsys translate_off
	initial
		dffe173 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe173 <= 1'b0;
		else if  (clken == 1'b1)   dffe173 <= wire_mac_out14_dataout[20];
	// synopsys translate_off
	initial
		dffe174 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe174 <= 1'b0;
		else if  (clken == 1'b1)   dffe174 <= wire_mac_out6_dataout[20];
	// synopsys translate_off
	initial
		dffe175 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe175 <= 1'b0;
		else if  (clken == 1'b1)   dffe175 <= wire_mac_out12_dataout[3];
	// synopsys translate_off
	initial
		dffe176 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe176 <= 1'b0;
		else if  (clken == 1'b1)   dffe176 <= wire_sft314a_out[21];
	// synopsys translate_off
	initial
		dffe177 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe177 <= 1'b0;
		else if  (clken == 1'b1)   dffe177 <= wire_mac_out14_dataout[21];
	// synopsys translate_off
	initial
		dffe178 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe178 <= 1'b0;
		else if  (clken == 1'b1)   dffe178 <= wire_mac_out6_dataout[21];
	// synopsys translate_off
	initial
		dffe179 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe179 <= 1'b0;
		else if  (clken == 1'b1)   dffe179 <= wire_mac_out12_dataout[4];
	// synopsys translate_off
	initial
		dffe180 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe180 <= 1'b0;
		else if  (clken == 1'b1)   dffe180 <= wire_sft314a_out[22];
	// synopsys translate_off
	initial
		dffe181 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe181 <= 1'b0;
		else if  (clken == 1'b1)   dffe181 <= wire_mac_out14_dataout[22];
	// synopsys translate_off
	initial
		dffe182 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe182 <= 1'b0;
		else if  (clken == 1'b1)   dffe182 <= wire_mac_out6_dataout[22];
	// synopsys translate_off
	initial
		dffe183 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe183 <= 1'b0;
		else if  (clken == 1'b1)   dffe183 <= wire_mac_out12_dataout[5];
	// synopsys translate_off
	initial
		dffe184 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe184 <= 1'b0;
		else if  (clken == 1'b1)   dffe184 <= wire_sft314a_out[23];
	// synopsys translate_off
	initial
		dffe185 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe185 <= 1'b0;
		else if  (clken == 1'b1)   dffe185 <= wire_mac_out14_dataout[23];
	// synopsys translate_off
	initial
		dffe186 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe186 <= 1'b0;
		else if  (clken == 1'b1)   dffe186 <= wire_mac_out6_dataout[23];
	// synopsys translate_off
	initial
		dffe187 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe187 <= 1'b0;
		else if  (clken == 1'b1)   dffe187 <= wire_mac_out12_dataout[6];
	// synopsys translate_off
	initial
		dffe188 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe188 <= 1'b0;
		else if  (clken == 1'b1)   dffe188 <= wire_sft314a_out[24];
	// synopsys translate_off
	initial
		dffe189 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe189 <= 1'b0;
		else if  (clken == 1'b1)   dffe189 <= wire_mac_out14_dataout[24];
	// synopsys translate_off
	initial
		dffe19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe19 <= 1'b0;
		else if  (clken == 1'b1)   dffe19 <= wire_mac_out2_dataout[0];
	// synopsys translate_off
	initial
		dffe190 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe190 <= 1'b0;
		else if  (clken == 1'b1)   dffe190 <= wire_mac_out6_dataout[24];
	// synopsys translate_off
	initial
		dffe191 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe191 <= 1'b0;
		else if  (clken == 1'b1)   dffe191 <= wire_mac_out12_dataout[7];
	// synopsys translate_off
	initial
		dffe192 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe192 <= 1'b0;
		else if  (clken == 1'b1)   dffe192 <= wire_sft314a_out[25];
	// synopsys translate_off
	initial
		dffe193 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe193 <= 1'b0;
		else if  (clken == 1'b1)   dffe193 <= wire_mac_out14_dataout[25];
	// synopsys translate_off
	initial
		dffe194 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe194 <= 1'b0;
		else if  (clken == 1'b1)   dffe194 <= wire_mac_out6_dataout[25];
	// synopsys translate_off
	initial
		dffe195 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe195 <= 1'b0;
		else if  (clken == 1'b1)   dffe195 <= wire_mac_out12_dataout[8];
	// synopsys translate_off
	initial
		dffe196 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe196 <= 1'b0;
		else if  (clken == 1'b1)   dffe196 <= wire_sft314a_out[26];
	// synopsys translate_off
	initial
		dffe197 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe197 <= 1'b0;
		else if  (clken == 1'b1)   dffe197 <= wire_mac_out14_dataout[26];
	// synopsys translate_off
	initial
		dffe198 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe198 <= 1'b0;
		else if  (clken == 1'b1)   dffe198 <= wire_mac_out6_dataout[26];
	// synopsys translate_off
	initial
		dffe199 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe199 <= 1'b0;
		else if  (clken == 1'b1)   dffe199 <= wire_mac_out12_dataout[9];
	// synopsys translate_off
	initial
		dffe20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe20 <= 1'b0;
		else if  (clken == 1'b1)   dffe20 <= wire_mac_out2_dataout[1];
	// synopsys translate_off
	initial
		dffe200 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe200 <= 1'b0;
		else if  (clken == 1'b1)   dffe200 <= wire_sft314a_out[27];
	// synopsys translate_off
	initial
		dffe201 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe201 <= 1'b0;
		else if  (clken == 1'b1)   dffe201 <= wire_mac_out14_dataout[27];
	// synopsys translate_off
	initial
		dffe202 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe202 <= 1'b0;
		else if  (clken == 1'b1)   dffe202 <= wire_mac_out6_dataout[27];
	// synopsys translate_off
	initial
		dffe203 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe203 <= 1'b0;
		else if  (clken == 1'b1)   dffe203 <= wire_mac_out12_dataout[10];
	// synopsys translate_off
	initial
		dffe204 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe204 <= 1'b0;
		else if  (clken == 1'b1)   dffe204 <= wire_sft314a_out[28];
	// synopsys translate_off
	initial
		dffe205 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe205 <= 1'b0;
		else if  (clken == 1'b1)   dffe205 <= wire_mac_out14_dataout[28];
	// synopsys translate_off
	initial
		dffe206 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe206 <= 1'b0;
		else if  (clken == 1'b1)   dffe206 <= wire_mac_out6_dataout[28];
	// synopsys translate_off
	initial
		dffe207 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe207 <= 1'b0;
		else if  (clken == 1'b1)   dffe207 <= wire_mac_out12_dataout[11];
	// synopsys translate_off
	initial
		dffe208 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe208 <= 1'b0;
		else if  (clken == 1'b1)   dffe208 <= wire_sft314a_out[29];
	// synopsys translate_off
	initial
		dffe209 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe209 <= 1'b0;
		else if  (clken == 1'b1)   dffe209 <= wire_mac_out14_dataout[29];
	// synopsys translate_off
	initial
		dffe21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe21 <= 1'b0;
		else if  (clken == 1'b1)   dffe21 <= wire_mac_out2_dataout[2];
	// synopsys translate_off
	initial
		dffe210 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe210 <= 1'b0;
		else if  (clken == 1'b1)   dffe210 <= wire_mac_out6_dataout[29];
	// synopsys translate_off
	initial
		dffe211 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe211 <= 1'b0;
		else if  (clken == 1'b1)   dffe211 <= wire_mac_out12_dataout[12];
	// synopsys translate_off
	initial
		dffe212 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe212 <= 1'b0;
		else if  (clken == 1'b1)   dffe212 <= wire_sft314a_out[30];
	// synopsys translate_off
	initial
		dffe213 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe213 <= 1'b0;
		else if  (clken == 1'b1)   dffe213 <= wire_mac_out14_dataout[30];
	// synopsys translate_off
	initial
		dffe214 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe214 <= 1'b0;
		else if  (clken == 1'b1)   dffe214 <= wire_mac_out6_dataout[30];
	// synopsys translate_off
	initial
		dffe215 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe215 <= 1'b0;
		else if  (clken == 1'b1)   dffe215 <= wire_mac_out12_dataout[13];
	// synopsys translate_off
	initial
		dffe216 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe216 <= 1'b0;
		else if  (clken == 1'b1)   dffe216 <= wire_sft314a_out[31];
	// synopsys translate_off
	initial
		dffe217 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe217 <= 1'b0;
		else if  (clken == 1'b1)   dffe217 <= wire_mac_out14_dataout[31];
	// synopsys translate_off
	initial
		dffe218 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe218 <= 1'b0;
		else if  (clken == 1'b1)   dffe218 <= wire_mac_out6_dataout[31];
	// synopsys translate_off
	initial
		dffe219 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe219 <= 1'b0;
		else if  (clken == 1'b1)   dffe219 <= wire_mac_out12_dataout[14];
	// synopsys translate_off
	initial
		dffe22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe22 <= 1'b0;
		else if  (clken == 1'b1)   dffe22 <= wire_mac_out2_dataout[3];
	// synopsys translate_off
	initial
		dffe220 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe220 <= 1'b0;
		else if  (clken == 1'b1)   dffe220 <= wire_sft314a_out[32];
	// synopsys translate_off
	initial
		dffe221 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe221 <= 1'b0;
		else if  (clken == 1'b1)   dffe221 <= wire_mac_out14_dataout[32];
	// synopsys translate_off
	initial
		dffe222 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe222 <= 1'b0;
		else if  (clken == 1'b1)   dffe222 <= wire_mac_out6_dataout[32];
	// synopsys translate_off
	initial
		dffe223 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe223 <= 1'b0;
		else if  (clken == 1'b1)   dffe223 <= wire_mac_out12_dataout[15];
	// synopsys translate_off
	initial
		dffe224 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe224 <= 1'b0;
		else if  (clken == 1'b1)   dffe224 <= wire_sft314a_out[33];
	// synopsys translate_off
	initial
		dffe225 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe225 <= 1'b0;
		else if  (clken == 1'b1)   dffe225 <= wire_mac_out14_dataout[33];
	// synopsys translate_off
	initial
		dffe226 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe226 <= 1'b0;
		else if  (clken == 1'b1)   dffe226 <= wire_mac_out6_dataout[33];
	// synopsys translate_off
	initial
		dffe227 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe227 <= 1'b0;
		else if  (clken == 1'b1)   dffe227 <= wire_mac_out12_dataout[16];
	// synopsys translate_off
	initial
		dffe228 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe228 <= 1'b0;
		else if  (clken == 1'b1)   dffe228 <= wire_sft314a_out[34];
	// synopsys translate_off
	initial
		dffe229 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe229 <= 1'b0;
		else if  (clken == 1'b1)   dffe229 <= wire_mac_out14_dataout[34];
	// synopsys translate_off
	initial
		dffe23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe23 <= 1'b0;
		else if  (clken == 1'b1)   dffe23 <= wire_mac_out2_dataout[4];
	// synopsys translate_off
	initial
		dffe230 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe230 <= 1'b0;
		else if  (clken == 1'b1)   dffe230 <= wire_mac_out6_dataout[34];
	// synopsys translate_off
	initial
		dffe231 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe231 <= 1'b0;
		else if  (clken == 1'b1)   dffe231 <= wire_mac_out16_dataout[17];
	// synopsys translate_off
	initial
		dffe232 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe232 <= 1'b0;
		else if  (clken == 1'b1)   dffe232 <= wire_mac_out12_dataout[17];
	// synopsys translate_off
	initial
		dffe233 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe233 <= 1'b0;
		else if  (clken == 1'b1)   dffe233 <= wire_mac_out10_dataout[35];
	// synopsys translate_off
	initial
		dffe234 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe234 <= 1'b0;
		else if  (clken == 1'b1)   dffe234 <= wire_sft314a_out[35];
	// synopsys translate_off
	initial
		dffe235 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe235 <= 1'b0;
		else if  (clken == 1'b1)   dffe235 <= wire_mac_out18_dataout[0];
	// synopsys translate_off
	initial
		dffe236 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe236 <= 1'b0;
		else if  (clken == 1'b1)   dffe236 <= wire_mac_out16_dataout[18];
	// synopsys translate_off
	initial
		dffe237 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe237 <= 1'b0;
		else if  (clken == 1'b1)   dffe237 <= wire_mac_out12_dataout[18];
	// synopsys translate_off
	initial
		dffe238 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe238 <= 1'b0;
		else if  (clken == 1'b1)   dffe238 <= wire_mac_out18_dataout[1];
	// synopsys translate_off
	initial
		dffe239 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe239 <= 1'b0;
		else if  (clken == 1'b1)   dffe239 <= wire_mac_out16_dataout[19];
	// synopsys translate_off
	initial
		dffe24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe24 <= 1'b0;
		else if  (clken == 1'b1)   dffe24 <= wire_mac_out2_dataout[5];
	// synopsys translate_off
	initial
		dffe240 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe240 <= 1'b0;
		else if  (clken == 1'b1)   dffe240 <= wire_mac_out12_dataout[19];
	// synopsys translate_off
	initial
		dffe241 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe241 <= 1'b0;
		else if  (clken == 1'b1)   dffe241 <= wire_mac_out18_dataout[2];
	// synopsys translate_off
	initial
		dffe242 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe242 <= 1'b0;
		else if  (clken == 1'b1)   dffe242 <= wire_mac_out16_dataout[20];
	// synopsys translate_off
	initial
		dffe243 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe243 <= 1'b0;
		else if  (clken == 1'b1)   dffe243 <= wire_mac_out12_dataout[20];
	// synopsys translate_off
	initial
		dffe244 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe244 <= 1'b0;
		else if  (clken == 1'b1)   dffe244 <= wire_mac_out18_dataout[3];
	// synopsys translate_off
	initial
		dffe245 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe245 <= 1'b0;
		else if  (clken == 1'b1)   dffe245 <= wire_mac_out16_dataout[21];
	// synopsys translate_off
	initial
		dffe246 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe246 <= 1'b0;
		else if  (clken == 1'b1)   dffe246 <= wire_mac_out12_dataout[21];
	// synopsys translate_off
	initial
		dffe247 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe247 <= 1'b0;
		else if  (clken == 1'b1)   dffe247 <= wire_mac_out18_dataout[4];
	// synopsys translate_off
	initial
		dffe248 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe248 <= 1'b0;
		else if  (clken == 1'b1)   dffe248 <= wire_mac_out16_dataout[22];
	// synopsys translate_off
	initial
		dffe249 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe249 <= 1'b0;
		else if  (clken == 1'b1)   dffe249 <= wire_mac_out12_dataout[22];
	// synopsys translate_off
	initial
		dffe25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe25 <= 1'b0;
		else if  (clken == 1'b1)   dffe25 <= wire_mac_out2_dataout[6];
	// synopsys translate_off
	initial
		dffe250 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe250 <= 1'b0;
		else if  (clken == 1'b1)   dffe250 <= wire_mac_out18_dataout[5];
	// synopsys translate_off
	initial
		dffe251 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe251 <= 1'b0;
		else if  (clken == 1'b1)   dffe251 <= wire_mac_out16_dataout[23];
	// synopsys translate_off
	initial
		dffe252 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe252 <= 1'b0;
		else if  (clken == 1'b1)   dffe252 <= wire_mac_out12_dataout[23];
	// synopsys translate_off
	initial
		dffe253 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe253 <= 1'b0;
		else if  (clken == 1'b1)   dffe253 <= wire_mac_out18_dataout[6];
	// synopsys translate_off
	initial
		dffe254 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe254 <= 1'b0;
		else if  (clken == 1'b1)   dffe254 <= wire_mac_out16_dataout[24];
	// synopsys translate_off
	initial
		dffe255 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe255 <= 1'b0;
		else if  (clken == 1'b1)   dffe255 <= wire_mac_out12_dataout[24];
	// synopsys translate_off
	initial
		dffe256 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe256 <= 1'b0;
		else if  (clken == 1'b1)   dffe256 <= wire_mac_out18_dataout[7];
	// synopsys translate_off
	initial
		dffe257 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe257 <= 1'b0;
		else if  (clken == 1'b1)   dffe257 <= wire_mac_out16_dataout[25];
	// synopsys translate_off
	initial
		dffe258 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe258 <= 1'b0;
		else if  (clken == 1'b1)   dffe258 <= wire_mac_out12_dataout[25];
	// synopsys translate_off
	initial
		dffe259 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe259 <= 1'b0;
		else if  (clken == 1'b1)   dffe259 <= wire_mac_out18_dataout[8];
	// synopsys translate_off
	initial
		dffe26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe26 <= 1'b0;
		else if  (clken == 1'b1)   dffe26 <= wire_mac_out2_dataout[7];
	// synopsys translate_off
	initial
		dffe260 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe260 <= 1'b0;
		else if  (clken == 1'b1)   dffe260 <= wire_mac_out16_dataout[26];
	// synopsys translate_off
	initial
		dffe261 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe261 <= 1'b0;
		else if  (clken == 1'b1)   dffe261 <= wire_mac_out12_dataout[26];
	// synopsys translate_off
	initial
		dffe262 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe262 <= 1'b0;
		else if  (clken == 1'b1)   dffe262 <= wire_mac_out18_dataout[9];
	// synopsys translate_off
	initial
		dffe263 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe263 <= 1'b0;
		else if  (clken == 1'b1)   dffe263 <= wire_mac_out16_dataout[27];
	// synopsys translate_off
	initial
		dffe264 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe264 <= 1'b0;
		else if  (clken == 1'b1)   dffe264 <= wire_mac_out12_dataout[27];
	// synopsys translate_off
	initial
		dffe265 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe265 <= 1'b0;
		else if  (clken == 1'b1)   dffe265 <= wire_mac_out18_dataout[10];
	// synopsys translate_off
	initial
		dffe266 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe266 <= 1'b0;
		else if  (clken == 1'b1)   dffe266 <= wire_mac_out16_dataout[28];
	// synopsys translate_off
	initial
		dffe267 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe267 <= 1'b0;
		else if  (clken == 1'b1)   dffe267 <= wire_mac_out12_dataout[28];
	// synopsys translate_off
	initial
		dffe268 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe268 <= 1'b0;
		else if  (clken == 1'b1)   dffe268 <= wire_mac_out18_dataout[11];
	// synopsys translate_off
	initial
		dffe269 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe269 <= 1'b0;
		else if  (clken == 1'b1)   dffe269 <= wire_mac_out16_dataout[29];
	// synopsys translate_off
	initial
		dffe27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe27 <= 1'b0;
		else if  (clken == 1'b1)   dffe27 <= wire_mac_out2_dataout[8];
	// synopsys translate_off
	initial
		dffe270 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe270 <= 1'b0;
		else if  (clken == 1'b1)   dffe270 <= wire_mac_out12_dataout[29];
	// synopsys translate_off
	initial
		dffe271 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe271 <= 1'b0;
		else if  (clken == 1'b1)   dffe271 <= wire_mac_out18_dataout[12];
	// synopsys translate_off
	initial
		dffe272 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe272 <= 1'b0;
		else if  (clken == 1'b1)   dffe272 <= wire_mac_out16_dataout[30];
	// synopsys translate_off
	initial
		dffe273 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe273 <= 1'b0;
		else if  (clken == 1'b1)   dffe273 <= wire_mac_out12_dataout[30];
	// synopsys translate_off
	initial
		dffe274 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe274 <= 1'b0;
		else if  (clken == 1'b1)   dffe274 <= wire_mac_out18_dataout[13];
	// synopsys translate_off
	initial
		dffe275 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe275 <= 1'b0;
		else if  (clken == 1'b1)   dffe275 <= wire_mac_out16_dataout[31];
	// synopsys translate_off
	initial
		dffe276 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe276 <= 1'b0;
		else if  (clken == 1'b1)   dffe276 <= wire_mac_out12_dataout[31];
	// synopsys translate_off
	initial
		dffe277 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe277 <= 1'b0;
		else if  (clken == 1'b1)   dffe277 <= wire_mac_out18_dataout[14];
	// synopsys translate_off
	initial
		dffe278 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe278 <= 1'b0;
		else if  (clken == 1'b1)   dffe278 <= wire_mac_out16_dataout[32];
	// synopsys translate_off
	initial
		dffe279 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe279 <= 1'b0;
		else if  (clken == 1'b1)   dffe279 <= wire_mac_out12_dataout[32];
	// synopsys translate_off
	initial
		dffe28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe28 <= 1'b0;
		else if  (clken == 1'b1)   dffe28 <= wire_mac_out2_dataout[9];
	// synopsys translate_off
	initial
		dffe280 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe280 <= 1'b0;
		else if  (clken == 1'b1)   dffe280 <= wire_mac_out18_dataout[15];
	// synopsys translate_off
	initial
		dffe281 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe281 <= 1'b0;
		else if  (clken == 1'b1)   dffe281 <= wire_mac_out16_dataout[33];
	// synopsys translate_off
	initial
		dffe282 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe282 <= 1'b0;
		else if  (clken == 1'b1)   dffe282 <= wire_mac_out12_dataout[33];
	// synopsys translate_off
	initial
		dffe283 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe283 <= 1'b0;
		else if  (clken == 1'b1)   dffe283 <= wire_mac_out18_dataout[16];
	// synopsys translate_off
	initial
		dffe284 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe284 <= 1'b0;
		else if  (clken == 1'b1)   dffe284 <= wire_mac_out16_dataout[34];
	// synopsys translate_off
	initial
		dffe285 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe285 <= 1'b0;
		else if  (clken == 1'b1)   dffe285 <= wire_mac_out12_dataout[34];
	// synopsys translate_off
	initial
		dffe286 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe286 <= 1'b0;
		else if  (clken == 1'b1)   dffe286 <= wire_mac_out18_dataout[17];
	// synopsys translate_off
	initial
		dffe287 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe287 <= 1'b0;
		else if  (clken == 1'b1)   dffe287 <= wire_mac_out18_dataout[18];
	// synopsys translate_off
	initial
		dffe288 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe288 <= 1'b0;
		else if  (clken == 1'b1)   dffe288 <= wire_mac_out18_dataout[19];
	// synopsys translate_off
	initial
		dffe289 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe289 <= 1'b0;
		else if  (clken == 1'b1)   dffe289 <= wire_mac_out18_dataout[20];
	// synopsys translate_off
	initial
		dffe29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe29 <= 1'b0;
		else if  (clken == 1'b1)   dffe29 <= wire_mac_out2_dataout[10];
	// synopsys translate_off
	initial
		dffe290 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe290 <= 1'b0;
		else if  (clken == 1'b1)   dffe290 <= wire_mac_out18_dataout[21];
	// synopsys translate_off
	initial
		dffe291 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe291 <= 1'b0;
		else if  (clken == 1'b1)   dffe291 <= wire_mac_out18_dataout[22];
	// synopsys translate_off
	initial
		dffe292 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe292 <= 1'b0;
		else if  (clken == 1'b1)   dffe292 <= wire_mac_out18_dataout[23];
	// synopsys translate_off
	initial
		dffe293 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe293 <= 1'b0;
		else if  (clken == 1'b1)   dffe293 <= wire_mac_out18_dataout[24];
	// synopsys translate_off
	initial
		dffe294 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe294 <= 1'b0;
		else if  (clken == 1'b1)   dffe294 <= wire_mac_out18_dataout[25];
	// synopsys translate_off
	initial
		dffe295 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe295 <= 1'b0;
		else if  (clken == 1'b1)   dffe295 <= wire_mac_out18_dataout[26];
	// synopsys translate_off
	initial
		dffe296 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe296 <= 1'b0;
		else if  (clken == 1'b1)   dffe296 <= wire_mac_out18_dataout[27];
	// synopsys translate_off
	initial
		dffe297 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe297 <= 1'b0;
		else if  (clken == 1'b1)   dffe297 <= wire_mac_out18_dataout[28];
	// synopsys translate_off
	initial
		dffe298 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe298 <= 1'b0;
		else if  (clken == 1'b1)   dffe298 <= wire_mac_out18_dataout[29];
	// synopsys translate_off
	initial
		dffe299 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe299 <= 1'b0;
		else if  (clken == 1'b1)   dffe299 <= wire_mac_out18_dataout[30];
	// synopsys translate_off
	initial
		dffe30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe30 <= 1'b0;
		else if  (clken == 1'b1)   dffe30 <= wire_mac_out2_dataout[11];
	// synopsys translate_off
	initial
		dffe300 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe300 <= 1'b0;
		else if  (clken == 1'b1)   dffe300 <= wire_mac_out18_dataout[31];
	// synopsys translate_off
	initial
		dffe301 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe301 <= 1'b0;
		else if  (clken == 1'b1)   dffe301 <= wire_mac_out18_dataout[32];
	// synopsys translate_off
	initial
		dffe302 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe302 <= 1'b0;
		else if  (clken == 1'b1)   dffe302 <= wire_mac_out18_dataout[33];
	// synopsys translate_off
	initial
		dffe31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe31 <= 1'b0;
		else if  (clken == 1'b1)   dffe31 <= wire_mac_out2_dataout[12];
	// synopsys translate_off
	initial
		dffe32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe32 <= 1'b0;
		else if  (clken == 1'b1)   dffe32 <= wire_mac_out2_dataout[13];
	// synopsys translate_off
	initial
		dffe33 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe33 <= 1'b0;
		else if  (clken == 1'b1)   dffe33 <= wire_mac_out2_dataout[14];
	// synopsys translate_off
	initial
		dffe34 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe34 <= 1'b0;
		else if  (clken == 1'b1)   dffe34 <= wire_mac_out2_dataout[15];
	// synopsys translate_off
	initial
		dffe35 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe35 <= 1'b0;
		else if  (clken == 1'b1)   dffe35 <= wire_mac_out2_dataout[16];
	// synopsys translate_off
	initial
		dffe36 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe36 <= 1'b0;
		else if  (clken == 1'b1)   dffe36 <= wire_mac_out2_dataout[17];
	// synopsys translate_off
	initial
		dffe37 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe37 <= 1'b0;
		else if  (clken == 1'b1)   dffe37 <= wire_mac_out2_dataout[18];
	// synopsys translate_off
	initial
		dffe38 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe38 <= 1'b0;
		else if  (clken == 1'b1)   dffe38 <= wire_mac_out8_dataout[0];
	// synopsys translate_off
	initial
		dffe39 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe39 <= 1'b0;
		else if  (clken == 1'b1)   dffe39 <= wire_mac_out4_dataout[0];
	// synopsys translate_off
	initial
		dffe40 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe40 <= 1'b0;
		else if  (clken == 1'b1)   dffe40 <= wire_mac_out2_dataout[19];
	// synopsys translate_off
	initial
		dffe41 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe41 <= 1'b0;
		else if  (clken == 1'b1)   dffe41 <= wire_mac_out8_dataout[1];
	// synopsys translate_off
	initial
		dffe42 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe42 <= 1'b0;
		else if  (clken == 1'b1)   dffe42 <= wire_mac_out4_dataout[1];
	// synopsys translate_off
	initial
		dffe43 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe43 <= 1'b0;
		else if  (clken == 1'b1)   dffe43 <= wire_mac_out2_dataout[20];
	// synopsys translate_off
	initial
		dffe44 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe44 <= 1'b0;
		else if  (clken == 1'b1)   dffe44 <= wire_mac_out8_dataout[2];
	// synopsys translate_off
	initial
		dffe45 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe45 <= 1'b0;
		else if  (clken == 1'b1)   dffe45 <= wire_mac_out4_dataout[2];
	// synopsys translate_off
	initial
		dffe46 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe46 <= 1'b0;
		else if  (clken == 1'b1)   dffe46 <= wire_mac_out2_dataout[21];
	// synopsys translate_off
	initial
		dffe47 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe47 <= 1'b0;
		else if  (clken == 1'b1)   dffe47 <= wire_mac_out8_dataout[3];
	// synopsys translate_off
	initial
		dffe48 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe48 <= 1'b0;
		else if  (clken == 1'b1)   dffe48 <= wire_mac_out4_dataout[3];
	// synopsys translate_off
	initial
		dffe49 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe49 <= 1'b0;
		else if  (clken == 1'b1)   dffe49 <= wire_mac_out2_dataout[22];
	// synopsys translate_off
	initial
		dffe50 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe50 <= 1'b0;
		else if  (clken == 1'b1)   dffe50 <= wire_mac_out8_dataout[4];
	// synopsys translate_off
	initial
		dffe51 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe51 <= 1'b0;
		else if  (clken == 1'b1)   dffe51 <= wire_mac_out4_dataout[4];
	// synopsys translate_off
	initial
		dffe52 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe52 <= 1'b0;
		else if  (clken == 1'b1)   dffe52 <= wire_mac_out2_dataout[23];
	// synopsys translate_off
	initial
		dffe53 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe53 <= 1'b0;
		else if  (clken == 1'b1)   dffe53 <= wire_mac_out8_dataout[5];
	// synopsys translate_off
	initial
		dffe54 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe54 <= 1'b0;
		else if  (clken == 1'b1)   dffe54 <= wire_mac_out4_dataout[5];
	// synopsys translate_off
	initial
		dffe55 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe55 <= 1'b0;
		else if  (clken == 1'b1)   dffe55 <= wire_mac_out2_dataout[24];
	// synopsys translate_off
	initial
		dffe56 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe56 <= 1'b0;
		else if  (clken == 1'b1)   dffe56 <= wire_mac_out8_dataout[6];
	// synopsys translate_off
	initial
		dffe57 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe57 <= 1'b0;
		else if  (clken == 1'b1)   dffe57 <= wire_mac_out4_dataout[6];
	// synopsys translate_off
	initial
		dffe58 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe58 <= 1'b0;
		else if  (clken == 1'b1)   dffe58 <= wire_mac_out2_dataout[25];
	// synopsys translate_off
	initial
		dffe59 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe59 <= 1'b0;
		else if  (clken == 1'b1)   dffe59 <= wire_mac_out8_dataout[7];
	// synopsys translate_off
	initial
		dffe60 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe60 <= 1'b0;
		else if  (clken == 1'b1)   dffe60 <= wire_mac_out4_dataout[7];
	// synopsys translate_off
	initial
		dffe61 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe61 <= 1'b0;
		else if  (clken == 1'b1)   dffe61 <= wire_mac_out2_dataout[26];
	// synopsys translate_off
	initial
		dffe62 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe62 <= 1'b0;
		else if  (clken == 1'b1)   dffe62 <= wire_mac_out8_dataout[8];
	// synopsys translate_off
	initial
		dffe63 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe63 <= 1'b0;
		else if  (clken == 1'b1)   dffe63 <= wire_mac_out4_dataout[8];
	// synopsys translate_off
	initial
		dffe64 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe64 <= 1'b0;
		else if  (clken == 1'b1)   dffe64 <= wire_mac_out2_dataout[27];
	// synopsys translate_off
	initial
		dffe65 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe65 <= 1'b0;
		else if  (clken == 1'b1)   dffe65 <= wire_mac_out8_dataout[9];
	// synopsys translate_off
	initial
		dffe66 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe66 <= 1'b0;
		else if  (clken == 1'b1)   dffe66 <= wire_mac_out4_dataout[9];
	// synopsys translate_off
	initial
		dffe67 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe67 <= 1'b0;
		else if  (clken == 1'b1)   dffe67 <= wire_mac_out2_dataout[28];
	// synopsys translate_off
	initial
		dffe68 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe68 <= 1'b0;
		else if  (clken == 1'b1)   dffe68 <= wire_mac_out8_dataout[10];
	// synopsys translate_off
	initial
		dffe69 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe69 <= 1'b0;
		else if  (clken == 1'b1)   dffe69 <= wire_mac_out4_dataout[10];
	// synopsys translate_off
	initial
		dffe70 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe70 <= 1'b0;
		else if  (clken == 1'b1)   dffe70 <= wire_mac_out2_dataout[29];
	// synopsys translate_off
	initial
		dffe71 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe71 <= 1'b0;
		else if  (clken == 1'b1)   dffe71 <= wire_mac_out8_dataout[11];
	// synopsys translate_off
	initial
		dffe72 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe72 <= 1'b0;
		else if  (clken == 1'b1)   dffe72 <= wire_mac_out4_dataout[11];
	// synopsys translate_off
	initial
		dffe73 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe73 <= 1'b0;
		else if  (clken == 1'b1)   dffe73 <= wire_mac_out2_dataout[30];
	// synopsys translate_off
	initial
		dffe74 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe74 <= 1'b0;
		else if  (clken == 1'b1)   dffe74 <= wire_mac_out8_dataout[12];
	// synopsys translate_off
	initial
		dffe75 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe75 <= 1'b0;
		else if  (clken == 1'b1)   dffe75 <= wire_mac_out4_dataout[12];
	// synopsys translate_off
	initial
		dffe76 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe76 <= 1'b0;
		else if  (clken == 1'b1)   dffe76 <= wire_mac_out2_dataout[31];
	// synopsys translate_off
	initial
		dffe77 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe77 <= 1'b0;
		else if  (clken == 1'b1)   dffe77 <= wire_mac_out8_dataout[13];
	// synopsys translate_off
	initial
		dffe78 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe78 <= 1'b0;
		else if  (clken == 1'b1)   dffe78 <= wire_mac_out4_dataout[13];
	// synopsys translate_off
	initial
		dffe79 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe79 <= 1'b0;
		else if  (clken == 1'b1)   dffe79 <= wire_mac_out2_dataout[32];
	// synopsys translate_off
	initial
		dffe80 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe80 <= 1'b0;
		else if  (clken == 1'b1)   dffe80 <= wire_mac_out8_dataout[14];
	// synopsys translate_off
	initial
		dffe81 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe81 <= 1'b0;
		else if  (clken == 1'b1)   dffe81 <= wire_mac_out4_dataout[14];
	// synopsys translate_off
	initial
		dffe82 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe82 <= 1'b0;
		else if  (clken == 1'b1)   dffe82 <= wire_mac_out2_dataout[33];
	// synopsys translate_off
	initial
		dffe83 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe83 <= 1'b0;
		else if  (clken == 1'b1)   dffe83 <= wire_mac_out8_dataout[15];
	// synopsys translate_off
	initial
		dffe84 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe84 <= 1'b0;
		else if  (clken == 1'b1)   dffe84 <= wire_mac_out4_dataout[15];
	// synopsys translate_off
	initial
		dffe85 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe85 <= 1'b0;
		else if  (clken == 1'b1)   dffe85 <= wire_mac_out2_dataout[34];
	// synopsys translate_off
	initial
		dffe86 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe86 <= 1'b0;
		else if  (clken == 1'b1)   dffe86 <= wire_mac_out8_dataout[16];
	// synopsys translate_off
	initial
		dffe87 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe87 <= 1'b0;
		else if  (clken == 1'b1)   dffe87 <= wire_mac_out4_dataout[16];
	// synopsys translate_off
	initial
		dffe88 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe88 <= 1'b0;
		else if  (clken == 1'b1)   dffe88 <= wire_mac_out2_dataout[35];
	// synopsys translate_off
	initial
		dffe89 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe89 <= 1'b0;
		else if  (clken == 1'b1)   dffe89 <= wire_mac_out8_dataout[17];
	// synopsys translate_off
	initial
		dffe90 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe90 <= 1'b0;
		else if  (clken == 1'b1)   dffe90 <= wire_mac_out4_dataout[17];
	// synopsys translate_off
	initial
		dffe91 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe91 <= 1'b0;
		else if  (clken == 1'b1)   dffe91 <= wire_mac_out8_dataout[18];
	// synopsys translate_off
	initial
		dffe92 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe92 <= 1'b0;
		else if  (clken == 1'b1)   dffe92 <= wire_sft314a_out[0];
	// synopsys translate_off
	initial
		dffe93 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe93 <= 1'b0;
		else if  (clken == 1'b1)   dffe93 <= wire_mac_out10_dataout[0];
	// synopsys translate_off
	initial
		dffe94 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe94 <= 1'b0;
		else if  (clken == 1'b1)   dffe94 <= wire_mac_out4_dataout[18];
	// synopsys translate_off
	initial
		dffe95 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe95 <= 1'b0;
		else if  (clken == 1'b1)   dffe95 <= wire_mac_out8_dataout[19];
	// synopsys translate_off
	initial
		dffe96 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe96 <= 1'b0;
		else if  (clken == 1'b1)   dffe96 <= wire_sft314a_out[1];
	// synopsys translate_off
	initial
		dffe97 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe97 <= 1'b0;
		else if  (clken == 1'b1)   dffe97 <= wire_mac_out10_dataout[1];
	// synopsys translate_off
	initial
		dffe98 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe98 <= 1'b0;
		else if  (clken == 1'b1)   dffe98 <= wire_mac_out4_dataout[19];
	// synopsys translate_off
	initial
		dffe99 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe99 <= 1'b0;
		else if  (clken == 1'b1)   dffe99 <= wire_mac_out8_dataout[20];
	soft   sft304a_0
	( 
	.in(wire_sft304a_in[0:0]),
	.out(wire_sft304a_out[0:0]));
	soft   sft304a_1
	( 
	.in(wire_sft304a_in[1:1]),
	.out(wire_sft304a_out[1:1]));
	soft   sft304a_2
	( 
	.in(wire_sft304a_in[2:2]),
	.out(wire_sft304a_out[2:2]));
	soft   sft304a_3
	( 
	.in(wire_sft304a_in[3:3]),
	.out(wire_sft304a_out[3:3]));
	soft   sft304a_4
	( 
	.in(wire_sft304a_in[4:4]),
	.out(wire_sft304a_out[4:4]));
	soft   sft304a_5
	( 
	.in(wire_sft304a_in[5:5]),
	.out(wire_sft304a_out[5:5]));
	soft   sft304a_6
	( 
	.in(wire_sft304a_in[6:6]),
	.out(wire_sft304a_out[6:6]));
	soft   sft304a_7
	( 
	.in(wire_sft304a_in[7:7]),
	.out(wire_sft304a_out[7:7]));
	soft   sft304a_8
	( 
	.in(wire_sft304a_in[8:8]),
	.out(wire_sft304a_out[8:8]));
	soft   sft304a_9
	( 
	.in(wire_sft304a_in[9:9]),
	.out(wire_sft304a_out[9:9]));
	soft   sft304a_10
	( 
	.in(wire_sft304a_in[10:10]),
	.out(wire_sft304a_out[10:10]));
	soft   sft304a_11
	( 
	.in(wire_sft304a_in[11:11]),
	.out(wire_sft304a_out[11:11]));
	soft   sft304a_12
	( 
	.in(wire_sft304a_in[12:12]),
	.out(wire_sft304a_out[12:12]));
	soft   sft304a_13
	( 
	.in(wire_sft304a_in[13:13]),
	.out(wire_sft304a_out[13:13]));
	soft   sft304a_14
	( 
	.in(wire_sft304a_in[14:14]),
	.out(wire_sft304a_out[14:14]));
	soft   sft304a_15
	( 
	.in(wire_sft304a_in[15:15]),
	.out(wire_sft304a_out[15:15]));
	soft   sft304a_16
	( 
	.in(wire_sft304a_in[16:16]),
	.out(wire_sft304a_out[16:16]));
	soft   sft304a_17
	( 
	.in(wire_sft304a_in[17:17]),
	.out(wire_sft304a_out[17:17]));
	soft   sft304a_18
	( 
	.in(wire_sft304a_in[18:18]),
	.out(wire_sft304a_out[18:18]));
	soft   sft304a_19
	( 
	.in(wire_sft304a_in[19:19]),
	.out(wire_sft304a_out[19:19]));
	soft   sft304a_20
	( 
	.in(wire_sft304a_in[20:20]),
	.out(wire_sft304a_out[20:20]));
	soft   sft304a_21
	( 
	.in(wire_sft304a_in[21:21]),
	.out(wire_sft304a_out[21:21]));
	soft   sft304a_22
	( 
	.in(wire_sft304a_in[22:22]),
	.out(wire_sft304a_out[22:22]));
	soft   sft304a_23
	( 
	.in(wire_sft304a_in[23:23]),
	.out(wire_sft304a_out[23:23]));
	soft   sft304a_24
	( 
	.in(wire_sft304a_in[24:24]),
	.out(wire_sft304a_out[24:24]));
	soft   sft304a_25
	( 
	.in(wire_sft304a_in[25:25]),
	.out(wire_sft304a_out[25:25]));
	soft   sft304a_26
	( 
	.in(wire_sft304a_in[26:26]),
	.out(wire_sft304a_out[26:26]));
	soft   sft304a_27
	( 
	.in(wire_sft304a_in[27:27]),
	.out(wire_sft304a_out[27:27]));
	soft   sft304a_28
	( 
	.in(wire_sft304a_in[28:28]),
	.out(wire_sft304a_out[28:28]));
	soft   sft304a_29
	( 
	.in(wire_sft304a_in[29:29]),
	.out(wire_sft304a_out[29:29]));
	soft   sft304a_30
	( 
	.in(wire_sft304a_in[30:30]),
	.out(wire_sft304a_out[30:30]));
	soft   sft304a_31
	( 
	.in(wire_sft304a_in[31:31]),
	.out(wire_sft304a_out[31:31]));
	soft   sft304a_32
	( 
	.in(wire_sft304a_in[32:32]),
	.out(wire_sft304a_out[32:32]));
	soft   sft304a_33
	( 
	.in(wire_sft304a_in[33:33]),
	.out(wire_sft304a_out[33:33]));
	soft   sft304a_34
	( 
	.in(wire_sft304a_in[34:34]),
	.out(wire_sft304a_out[34:34]));
	soft   sft304a_35
	( 
	.in(wire_sft304a_in[35:35]),
	.out(wire_sft304a_out[35:35]));
	soft   sft304a_36
	( 
	.in(wire_sft304a_in[36:36]),
	.out(wire_sft304a_out[36:36]));
	soft   sft304a_37
	( 
	.in(wire_sft304a_in[37:37]),
	.out(wire_sft304a_out[37:37]));
	soft   sft304a_38
	( 
	.in(wire_sft304a_in[38:38]),
	.out(wire_sft304a_out[38:38]));
	soft   sft304a_39
	( 
	.in(wire_sft304a_in[39:39]),
	.out(wire_sft304a_out[39:39]));
	soft   sft304a_40
	( 
	.in(wire_sft304a_in[40:40]),
	.out(wire_sft304a_out[40:40]));
	soft   sft304a_41
	( 
	.in(wire_sft304a_in[41:41]),
	.out(wire_sft304a_out[41:41]));
	soft   sft304a_42
	( 
	.in(wire_sft304a_in[42:42]),
	.out(wire_sft304a_out[42:42]));
	soft   sft304a_43
	( 
	.in(wire_sft304a_in[43:43]),
	.out(wire_sft304a_out[43:43]));
	soft   sft304a_44
	( 
	.in(wire_sft304a_in[44:44]),
	.out(wire_sft304a_out[44:44]));
	soft   sft304a_45
	( 
	.in(wire_sft304a_in[45:45]),
	.out(wire_sft304a_out[45:45]));
	soft   sft304a_46
	( 
	.in(wire_sft304a_in[46:46]),
	.out(wire_sft304a_out[46:46]));
	soft   sft304a_47
	( 
	.in(wire_sft304a_in[47:47]),
	.out(wire_sft304a_out[47:47]));
	soft   sft304a_48
	( 
	.in(wire_sft304a_in[48:48]),
	.out(wire_sft304a_out[48:48]));
	soft   sft304a_49
	( 
	.in(wire_sft304a_in[49:49]),
	.out(wire_sft304a_out[49:49]));
	soft   sft304a_50
	( 
	.in(wire_sft304a_in[50:50]),
	.out(wire_sft304a_out[50:50]));
	soft   sft304a_51
	( 
	.in(wire_sft304a_in[51:51]),
	.out(wire_sft304a_out[51:51]));
	soft   sft304a_52
	( 
	.in(wire_sft304a_in[52:52]),
	.out(wire_sft304a_out[52:52]));
	soft   sft304a_53
	( 
	.in(wire_sft304a_in[53:53]),
	.out(wire_sft304a_out[53:53]));
	soft   sft304a_54
	( 
	.in(wire_sft304a_in[54:54]),
	.out(wire_sft304a_out[54:54]));
	soft   sft304a_55
	( 
	.in(wire_sft304a_in[55:55]),
	.out(wire_sft304a_out[55:55]));
	soft   sft304a_56
	( 
	.in(wire_sft304a_in[56:56]),
	.out(wire_sft304a_out[56:56]));
	soft   sft304a_57
	( 
	.in(wire_sft304a_in[57:57]),
	.out(wire_sft304a_out[57:57]));
	soft   sft304a_58
	( 
	.in(wire_sft304a_in[58:58]),
	.out(wire_sft304a_out[58:58]));
	soft   sft304a_59
	( 
	.in(wire_sft304a_in[59:59]),
	.out(wire_sft304a_out[59:59]));
	soft   sft304a_60
	( 
	.in(wire_sft304a_in[60:60]),
	.out(wire_sft304a_out[60:60]));
	soft   sft304a_61
	( 
	.in(wire_sft304a_in[61:61]),
	.out(wire_sft304a_out[61:61]));
	soft   sft304a_62
	( 
	.in(wire_sft304a_in[62:62]),
	.out(wire_sft304a_out[62:62]));
	soft   sft304a_63
	( 
	.in(wire_sft304a_in[63:63]),
	.out(wire_sft304a_out[63:63]));
	soft   sft304a_64
	( 
	.in(wire_sft304a_in[64:64]),
	.out(wire_sft304a_out[64:64]));
	soft   sft304a_65
	( 
	.in(wire_sft304a_in[65:65]),
	.out(wire_sft304a_out[65:65]));
	soft   sft304a_66
	( 
	.in(wire_sft304a_in[66:66]),
	.out(wire_sft304a_out[66:66]));
	soft   sft304a_67
	( 
	.in(wire_sft304a_in[67:67]),
	.out(wire_sft304a_out[67:67]));
	soft   sft304a_68
	( 
	.in(wire_sft304a_in[68:68]),
	.out(wire_sft304a_out[68:68]));
	soft   sft304a_69
	( 
	.in(wire_sft304a_in[69:69]),
	.out(wire_sft304a_out[69:69]));
	soft   sft304a_70
	( 
	.in(wire_sft304a_in[70:70]),
	.out(wire_sft304a_out[70:70]));
	soft   sft304a_71
	( 
	.in(wire_sft304a_in[71:71]),
	.out(wire_sft304a_out[71:71]));
	soft   sft304a_72
	( 
	.in(wire_sft304a_in[72:72]),
	.out(wire_sft304a_out[72:72]));
	assign
		wire_sft304a_in = {w1455w, {dffe286, {dffe283, {dffe280, {dffe277, {dffe274, {dffe271, {dffe268, {dffe265, {dffe262, {dffe259, {dffe256, {dffe253, {dffe250, {dffe247, {dffe244, {dffe241, {dffe238, {dffe235, {dffe231, {dffe227, {dffe223, {dffe219, {dffe215, {dffe211, {dffe207, {dffe203, {dffe199, {dffe195, {dffe191, {dffe187, {dffe183, {dffe179, {dffe175, {dffe171, {dffe167, {dffe163, {dffe159, {dffe155, {dffe151, {dffe147, {dffe143, {dffe139, {dffe135, {dffe131, {dffe127, {dffe123, {dffe119, {dffe115, {dffe111, {dffe107, {dffe103, {dffe99, {dffe95, {dffe91, {dffe89, {dffe86, {dffe83, {dffe80, {dffe77, {dffe74, {dffe71, {dffe68, {dffe65, {dffe62, {dffe59, {dffe56, {dffe53, {dffe50, {dffe47, {dffe44, {dffe41, dffe38}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft305a_0
	( 
	.in(wire_sft305a_in[0:0]),
	.out(wire_sft305a_out[0:0]));
	soft   sft305a_1
	( 
	.in(wire_sft305a_in[1:1]),
	.out(wire_sft305a_out[1:1]));
	soft   sft305a_2
	( 
	.in(wire_sft305a_in[2:2]),
	.out(wire_sft305a_out[2:2]));
	soft   sft305a_3
	( 
	.in(wire_sft305a_in[3:3]),
	.out(wire_sft305a_out[3:3]));
	soft   sft305a_4
	( 
	.in(wire_sft305a_in[4:4]),
	.out(wire_sft305a_out[4:4]));
	soft   sft305a_5
	( 
	.in(wire_sft305a_in[5:5]),
	.out(wire_sft305a_out[5:5]));
	soft   sft305a_6
	( 
	.in(wire_sft305a_in[6:6]),
	.out(wire_sft305a_out[6:6]));
	soft   sft305a_7
	( 
	.in(wire_sft305a_in[7:7]),
	.out(wire_sft305a_out[7:7]));
	soft   sft305a_8
	( 
	.in(wire_sft305a_in[8:8]),
	.out(wire_sft305a_out[8:8]));
	soft   sft305a_9
	( 
	.in(wire_sft305a_in[9:9]),
	.out(wire_sft305a_out[9:9]));
	soft   sft305a_10
	( 
	.in(wire_sft305a_in[10:10]),
	.out(wire_sft305a_out[10:10]));
	soft   sft305a_11
	( 
	.in(wire_sft305a_in[11:11]),
	.out(wire_sft305a_out[11:11]));
	soft   sft305a_12
	( 
	.in(wire_sft305a_in[12:12]),
	.out(wire_sft305a_out[12:12]));
	soft   sft305a_13
	( 
	.in(wire_sft305a_in[13:13]),
	.out(wire_sft305a_out[13:13]));
	soft   sft305a_14
	( 
	.in(wire_sft305a_in[14:14]),
	.out(wire_sft305a_out[14:14]));
	soft   sft305a_15
	( 
	.in(wire_sft305a_in[15:15]),
	.out(wire_sft305a_out[15:15]));
	soft   sft305a_16
	( 
	.in(wire_sft305a_in[16:16]),
	.out(wire_sft305a_out[16:16]));
	soft   sft305a_17
	( 
	.in(wire_sft305a_in[17:17]),
	.out(wire_sft305a_out[17:17]));
	soft   sft305a_18
	( 
	.in(wire_sft305a_in[18:18]),
	.out(wire_sft305a_out[18:18]));
	soft   sft305a_19
	( 
	.in(wire_sft305a_in[19:19]),
	.out(wire_sft305a_out[19:19]));
	soft   sft305a_20
	( 
	.in(wire_sft305a_in[20:20]),
	.out(wire_sft305a_out[20:20]));
	soft   sft305a_21
	( 
	.in(wire_sft305a_in[21:21]),
	.out(wire_sft305a_out[21:21]));
	soft   sft305a_22
	( 
	.in(wire_sft305a_in[22:22]),
	.out(wire_sft305a_out[22:22]));
	soft   sft305a_23
	( 
	.in(wire_sft305a_in[23:23]),
	.out(wire_sft305a_out[23:23]));
	soft   sft305a_24
	( 
	.in(wire_sft305a_in[24:24]),
	.out(wire_sft305a_out[24:24]));
	soft   sft305a_25
	( 
	.in(wire_sft305a_in[25:25]),
	.out(wire_sft305a_out[25:25]));
	soft   sft305a_26
	( 
	.in(wire_sft305a_in[26:26]),
	.out(wire_sft305a_out[26:26]));
	soft   sft305a_27
	( 
	.in(wire_sft305a_in[27:27]),
	.out(wire_sft305a_out[27:27]));
	soft   sft305a_28
	( 
	.in(wire_sft305a_in[28:28]),
	.out(wire_sft305a_out[28:28]));
	soft   sft305a_29
	( 
	.in(wire_sft305a_in[29:29]),
	.out(wire_sft305a_out[29:29]));
	soft   sft305a_30
	( 
	.in(wire_sft305a_in[30:30]),
	.out(wire_sft305a_out[30:30]));
	soft   sft305a_31
	( 
	.in(wire_sft305a_in[31:31]),
	.out(wire_sft305a_out[31:31]));
	soft   sft305a_32
	( 
	.in(wire_sft305a_in[32:32]),
	.out(wire_sft305a_out[32:32]));
	soft   sft305a_33
	( 
	.in(wire_sft305a_in[33:33]),
	.out(wire_sft305a_out[33:33]));
	soft   sft305a_34
	( 
	.in(wire_sft305a_in[34:34]),
	.out(wire_sft305a_out[34:34]));
	soft   sft305a_35
	( 
	.in(wire_sft305a_in[35:35]),
	.out(wire_sft305a_out[35:35]));
	soft   sft305a_36
	( 
	.in(wire_sft305a_in[36:36]),
	.out(wire_sft305a_out[36:36]));
	soft   sft305a_37
	( 
	.in(wire_sft305a_in[37:37]),
	.out(wire_sft305a_out[37:37]));
	soft   sft305a_38
	( 
	.in(wire_sft305a_in[38:38]),
	.out(wire_sft305a_out[38:38]));
	soft   sft305a_39
	( 
	.in(wire_sft305a_in[39:39]),
	.out(wire_sft305a_out[39:39]));
	soft   sft305a_40
	( 
	.in(wire_sft305a_in[40:40]),
	.out(wire_sft305a_out[40:40]));
	soft   sft305a_41
	( 
	.in(wire_sft305a_in[41:41]),
	.out(wire_sft305a_out[41:41]));
	soft   sft305a_42
	( 
	.in(wire_sft305a_in[42:42]),
	.out(wire_sft305a_out[42:42]));
	soft   sft305a_43
	( 
	.in(wire_sft305a_in[43:43]),
	.out(wire_sft305a_out[43:43]));
	soft   sft305a_44
	( 
	.in(wire_sft305a_in[44:44]),
	.out(wire_sft305a_out[44:44]));
	soft   sft305a_45
	( 
	.in(wire_sft305a_in[45:45]),
	.out(wire_sft305a_out[45:45]));
	soft   sft305a_46
	( 
	.in(wire_sft305a_in[46:46]),
	.out(wire_sft305a_out[46:46]));
	soft   sft305a_47
	( 
	.in(wire_sft305a_in[47:47]),
	.out(wire_sft305a_out[47:47]));
	soft   sft305a_48
	( 
	.in(wire_sft305a_in[48:48]),
	.out(wire_sft305a_out[48:48]));
	soft   sft305a_49
	( 
	.in(wire_sft305a_in[49:49]),
	.out(wire_sft305a_out[49:49]));
	soft   sft305a_50
	( 
	.in(wire_sft305a_in[50:50]),
	.out(wire_sft305a_out[50:50]));
	soft   sft305a_51
	( 
	.in(wire_sft305a_in[51:51]),
	.out(wire_sft305a_out[51:51]));
	soft   sft305a_52
	( 
	.in(wire_sft305a_in[52:52]),
	.out(wire_sft305a_out[52:52]));
	soft   sft305a_53
	( 
	.in(wire_sft305a_in[53:53]),
	.out(wire_sft305a_out[53:53]));
	soft   sft305a_54
	( 
	.in(wire_sft305a_in[54:54]),
	.out(wire_sft305a_out[54:54]));
	soft   sft305a_55
	( 
	.in(wire_sft305a_in[55:55]),
	.out(wire_sft305a_out[55:55]));
	soft   sft305a_56
	( 
	.in(wire_sft305a_in[56:56]),
	.out(wire_sft305a_out[56:56]));
	soft   sft305a_57
	( 
	.in(wire_sft305a_in[57:57]),
	.out(wire_sft305a_out[57:57]));
	soft   sft305a_58
	( 
	.in(wire_sft305a_in[58:58]),
	.out(wire_sft305a_out[58:58]));
	soft   sft305a_59
	( 
	.in(wire_sft305a_in[59:59]),
	.out(wire_sft305a_out[59:59]));
	soft   sft305a_60
	( 
	.in(wire_sft305a_in[60:60]),
	.out(wire_sft305a_out[60:60]));
	soft   sft305a_61
	( 
	.in(wire_sft305a_in[61:61]),
	.out(wire_sft305a_out[61:61]));
	soft   sft305a_62
	( 
	.in(wire_sft305a_in[62:62]),
	.out(wire_sft305a_out[62:62]));
	soft   sft305a_63
	( 
	.in(wire_sft305a_in[63:63]),
	.out(wire_sft305a_out[63:63]));
	soft   sft305a_64
	( 
	.in(wire_sft305a_in[64:64]),
	.out(wire_sft305a_out[64:64]));
	soft   sft305a_65
	( 
	.in(wire_sft305a_in[65:65]),
	.out(wire_sft305a_out[65:65]));
	soft   sft305a_66
	( 
	.in(wire_sft305a_in[66:66]),
	.out(wire_sft305a_out[66:66]));
	soft   sft305a_67
	( 
	.in(wire_sft305a_in[67:67]),
	.out(wire_sft305a_out[67:67]));
	soft   sft305a_68
	( 
	.in(wire_sft305a_in[68:68]),
	.out(wire_sft305a_out[68:68]));
	soft   sft305a_69
	( 
	.in(wire_sft305a_in[69:69]),
	.out(wire_sft305a_out[69:69]));
	soft   sft305a_70
	( 
	.in(wire_sft305a_in[70:70]),
	.out(wire_sft305a_out[70:70]));
	soft   sft305a_71
	( 
	.in(wire_sft305a_in[71:71]),
	.out(wire_sft305a_out[71:71]));
	soft   sft305a_72
	( 
	.in(wire_sft305a_in[72:72]),
	.out(wire_sft305a_out[72:72]));
	assign
		wire_sft305a_in = {w1455w, {w1455w, {dffe284, {dffe281, {dffe278, {dffe275, {dffe272, {dffe269, {dffe266, {dffe263, {dffe260, {dffe257, {dffe254, {dffe251, {dffe248, {dffe245, {dffe242, {dffe239, {dffe236, {dffe232, {dffe228, {dffe224, {dffe220, {dffe216, {dffe212, {dffe208, {dffe204, {dffe200, {dffe196, {dffe192, {dffe188, {dffe184, {dffe180, {dffe176, {dffe172, {dffe168, {dffe164, {dffe160, {dffe156, {dffe152, {dffe148, {dffe144, {dffe140, {dffe136, {dffe132, {dffe128, {dffe124, {dffe120, {dffe116, {dffe112, {dffe108, {dffe104, {dffe100, {dffe96, {dffe92, {dffe90, {dffe87, {dffe84, {dffe81, {dffe78, {dffe75, {dffe72, {dffe69, {dffe66, {dffe63, {dffe60, {dffe57, {dffe54, {dffe51, {dffe48, {dffe45, {dffe42, dffe39}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft306a_0
	( 
	.in(wire_sft306a_in[0:0]),
	.out(wire_sft306a_out[0:0]));
	soft   sft306a_1
	( 
	.in(wire_sft306a_in[1:1]),
	.out(wire_sft306a_out[1:1]));
	soft   sft306a_2
	( 
	.in(wire_sft306a_in[2:2]),
	.out(wire_sft306a_out[2:2]));
	soft   sft306a_3
	( 
	.in(wire_sft306a_in[3:3]),
	.out(wire_sft306a_out[3:3]));
	soft   sft306a_4
	( 
	.in(wire_sft306a_in[4:4]),
	.out(wire_sft306a_out[4:4]));
	soft   sft306a_5
	( 
	.in(wire_sft306a_in[5:5]),
	.out(wire_sft306a_out[5:5]));
	soft   sft306a_6
	( 
	.in(wire_sft306a_in[6:6]),
	.out(wire_sft306a_out[6:6]));
	soft   sft306a_7
	( 
	.in(wire_sft306a_in[7:7]),
	.out(wire_sft306a_out[7:7]));
	soft   sft306a_8
	( 
	.in(wire_sft306a_in[8:8]),
	.out(wire_sft306a_out[8:8]));
	soft   sft306a_9
	( 
	.in(wire_sft306a_in[9:9]),
	.out(wire_sft306a_out[9:9]));
	soft   sft306a_10
	( 
	.in(wire_sft306a_in[10:10]),
	.out(wire_sft306a_out[10:10]));
	soft   sft306a_11
	( 
	.in(wire_sft306a_in[11:11]),
	.out(wire_sft306a_out[11:11]));
	soft   sft306a_12
	( 
	.in(wire_sft306a_in[12:12]),
	.out(wire_sft306a_out[12:12]));
	soft   sft306a_13
	( 
	.in(wire_sft306a_in[13:13]),
	.out(wire_sft306a_out[13:13]));
	soft   sft306a_14
	( 
	.in(wire_sft306a_in[14:14]),
	.out(wire_sft306a_out[14:14]));
	soft   sft306a_15
	( 
	.in(wire_sft306a_in[15:15]),
	.out(wire_sft306a_out[15:15]));
	soft   sft306a_16
	( 
	.in(wire_sft306a_in[16:16]),
	.out(wire_sft306a_out[16:16]));
	soft   sft306a_17
	( 
	.in(wire_sft306a_in[17:17]),
	.out(wire_sft306a_out[17:17]));
	soft   sft306a_18
	( 
	.in(wire_sft306a_in[18:18]),
	.out(wire_sft306a_out[18:18]));
	soft   sft306a_19
	( 
	.in(wire_sft306a_in[19:19]),
	.out(wire_sft306a_out[19:19]));
	soft   sft306a_20
	( 
	.in(wire_sft306a_in[20:20]),
	.out(wire_sft306a_out[20:20]));
	soft   sft306a_21
	( 
	.in(wire_sft306a_in[21:21]),
	.out(wire_sft306a_out[21:21]));
	soft   sft306a_22
	( 
	.in(wire_sft306a_in[22:22]),
	.out(wire_sft306a_out[22:22]));
	soft   sft306a_23
	( 
	.in(wire_sft306a_in[23:23]),
	.out(wire_sft306a_out[23:23]));
	soft   sft306a_24
	( 
	.in(wire_sft306a_in[24:24]),
	.out(wire_sft306a_out[24:24]));
	soft   sft306a_25
	( 
	.in(wire_sft306a_in[25:25]),
	.out(wire_sft306a_out[25:25]));
	soft   sft306a_26
	( 
	.in(wire_sft306a_in[26:26]),
	.out(wire_sft306a_out[26:26]));
	soft   sft306a_27
	( 
	.in(wire_sft306a_in[27:27]),
	.out(wire_sft306a_out[27:27]));
	soft   sft306a_28
	( 
	.in(wire_sft306a_in[28:28]),
	.out(wire_sft306a_out[28:28]));
	soft   sft306a_29
	( 
	.in(wire_sft306a_in[29:29]),
	.out(wire_sft306a_out[29:29]));
	soft   sft306a_30
	( 
	.in(wire_sft306a_in[30:30]),
	.out(wire_sft306a_out[30:30]));
	soft   sft306a_31
	( 
	.in(wire_sft306a_in[31:31]),
	.out(wire_sft306a_out[31:31]));
	soft   sft306a_32
	( 
	.in(wire_sft306a_in[32:32]),
	.out(wire_sft306a_out[32:32]));
	soft   sft306a_33
	( 
	.in(wire_sft306a_in[33:33]),
	.out(wire_sft306a_out[33:33]));
	soft   sft306a_34
	( 
	.in(wire_sft306a_in[34:34]),
	.out(wire_sft306a_out[34:34]));
	soft   sft306a_35
	( 
	.in(wire_sft306a_in[35:35]),
	.out(wire_sft306a_out[35:35]));
	soft   sft306a_36
	( 
	.in(wire_sft306a_in[36:36]),
	.out(wire_sft306a_out[36:36]));
	soft   sft306a_37
	( 
	.in(wire_sft306a_in[37:37]),
	.out(wire_sft306a_out[37:37]));
	soft   sft306a_38
	( 
	.in(wire_sft306a_in[38:38]),
	.out(wire_sft306a_out[38:38]));
	soft   sft306a_39
	( 
	.in(wire_sft306a_in[39:39]),
	.out(wire_sft306a_out[39:39]));
	soft   sft306a_40
	( 
	.in(wire_sft306a_in[40:40]),
	.out(wire_sft306a_out[40:40]));
	soft   sft306a_41
	( 
	.in(wire_sft306a_in[41:41]),
	.out(wire_sft306a_out[41:41]));
	soft   sft306a_42
	( 
	.in(wire_sft306a_in[42:42]),
	.out(wire_sft306a_out[42:42]));
	soft   sft306a_43
	( 
	.in(wire_sft306a_in[43:43]),
	.out(wire_sft306a_out[43:43]));
	soft   sft306a_44
	( 
	.in(wire_sft306a_in[44:44]),
	.out(wire_sft306a_out[44:44]));
	soft   sft306a_45
	( 
	.in(wire_sft306a_in[45:45]),
	.out(wire_sft306a_out[45:45]));
	soft   sft306a_46
	( 
	.in(wire_sft306a_in[46:46]),
	.out(wire_sft306a_out[46:46]));
	soft   sft306a_47
	( 
	.in(wire_sft306a_in[47:47]),
	.out(wire_sft306a_out[47:47]));
	soft   sft306a_48
	( 
	.in(wire_sft306a_in[48:48]),
	.out(wire_sft306a_out[48:48]));
	soft   sft306a_49
	( 
	.in(wire_sft306a_in[49:49]),
	.out(wire_sft306a_out[49:49]));
	soft   sft306a_50
	( 
	.in(wire_sft306a_in[50:50]),
	.out(wire_sft306a_out[50:50]));
	soft   sft306a_51
	( 
	.in(wire_sft306a_in[51:51]),
	.out(wire_sft306a_out[51:51]));
	soft   sft306a_52
	( 
	.in(wire_sft306a_in[52:52]),
	.out(wire_sft306a_out[52:52]));
	soft   sft306a_53
	( 
	.in(wire_sft306a_in[53:53]),
	.out(wire_sft306a_out[53:53]));
	soft   sft306a_54
	( 
	.in(wire_sft306a_in[54:54]),
	.out(wire_sft306a_out[54:54]));
	soft   sft306a_55
	( 
	.in(wire_sft306a_in[55:55]),
	.out(wire_sft306a_out[55:55]));
	soft   sft306a_56
	( 
	.in(wire_sft306a_in[56:56]),
	.out(wire_sft306a_out[56:56]));
	soft   sft306a_57
	( 
	.in(wire_sft306a_in[57:57]),
	.out(wire_sft306a_out[57:57]));
	soft   sft306a_58
	( 
	.in(wire_sft306a_in[58:58]),
	.out(wire_sft306a_out[58:58]));
	soft   sft306a_59
	( 
	.in(wire_sft306a_in[59:59]),
	.out(wire_sft306a_out[59:59]));
	soft   sft306a_60
	( 
	.in(wire_sft306a_in[60:60]),
	.out(wire_sft306a_out[60:60]));
	soft   sft306a_61
	( 
	.in(wire_sft306a_in[61:61]),
	.out(wire_sft306a_out[61:61]));
	soft   sft306a_62
	( 
	.in(wire_sft306a_in[62:62]),
	.out(wire_sft306a_out[62:62]));
	soft   sft306a_63
	( 
	.in(wire_sft306a_in[63:63]),
	.out(wire_sft306a_out[63:63]));
	soft   sft306a_64
	( 
	.in(wire_sft306a_in[64:64]),
	.out(wire_sft306a_out[64:64]));
	soft   sft306a_65
	( 
	.in(wire_sft306a_in[65:65]),
	.out(wire_sft306a_out[65:65]));
	soft   sft306a_66
	( 
	.in(wire_sft306a_in[66:66]),
	.out(wire_sft306a_out[66:66]));
	soft   sft306a_67
	( 
	.in(wire_sft306a_in[67:67]),
	.out(wire_sft306a_out[67:67]));
	soft   sft306a_68
	( 
	.in(wire_sft306a_in[68:68]),
	.out(wire_sft306a_out[68:68]));
	soft   sft306a_69
	( 
	.in(wire_sft306a_in[69:69]),
	.out(wire_sft306a_out[69:69]));
	soft   sft306a_70
	( 
	.in(wire_sft306a_in[70:70]),
	.out(wire_sft306a_out[70:70]));
	soft   sft306a_71
	( 
	.in(wire_sft306a_in[71:71]),
	.out(wire_sft306a_out[71:71]));
	soft   sft306a_72
	( 
	.in(wire_sft306a_in[72:72]),
	.out(wire_sft306a_out[72:72]));
	assign
		wire_sft306a_in = wire_add303_result;
	soft   sft308a_0
	( 
	.in(wire_sft308a_in[0:0]),
	.out(wire_sft308a_out[0:0]));
	soft   sft308a_1
	( 
	.in(wire_sft308a_in[1:1]),
	.out(wire_sft308a_out[1:1]));
	soft   sft308a_2
	( 
	.in(wire_sft308a_in[2:2]),
	.out(wire_sft308a_out[2:2]));
	soft   sft308a_3
	( 
	.in(wire_sft308a_in[3:3]),
	.out(wire_sft308a_out[3:3]));
	soft   sft308a_4
	( 
	.in(wire_sft308a_in[4:4]),
	.out(wire_sft308a_out[4:4]));
	soft   sft308a_5
	( 
	.in(wire_sft308a_in[5:5]),
	.out(wire_sft308a_out[5:5]));
	soft   sft308a_6
	( 
	.in(wire_sft308a_in[6:6]),
	.out(wire_sft308a_out[6:6]));
	soft   sft308a_7
	( 
	.in(wire_sft308a_in[7:7]),
	.out(wire_sft308a_out[7:7]));
	soft   sft308a_8
	( 
	.in(wire_sft308a_in[8:8]),
	.out(wire_sft308a_out[8:8]));
	soft   sft308a_9
	( 
	.in(wire_sft308a_in[9:9]),
	.out(wire_sft308a_out[9:9]));
	soft   sft308a_10
	( 
	.in(wire_sft308a_in[10:10]),
	.out(wire_sft308a_out[10:10]));
	soft   sft308a_11
	( 
	.in(wire_sft308a_in[11:11]),
	.out(wire_sft308a_out[11:11]));
	soft   sft308a_12
	( 
	.in(wire_sft308a_in[12:12]),
	.out(wire_sft308a_out[12:12]));
	soft   sft308a_13
	( 
	.in(wire_sft308a_in[13:13]),
	.out(wire_sft308a_out[13:13]));
	soft   sft308a_14
	( 
	.in(wire_sft308a_in[14:14]),
	.out(wire_sft308a_out[14:14]));
	soft   sft308a_15
	( 
	.in(wire_sft308a_in[15:15]),
	.out(wire_sft308a_out[15:15]));
	soft   sft308a_16
	( 
	.in(wire_sft308a_in[16:16]),
	.out(wire_sft308a_out[16:16]));
	soft   sft308a_17
	( 
	.in(wire_sft308a_in[17:17]),
	.out(wire_sft308a_out[17:17]));
	soft   sft308a_18
	( 
	.in(wire_sft308a_in[18:18]),
	.out(wire_sft308a_out[18:18]));
	soft   sft308a_19
	( 
	.in(wire_sft308a_in[19:19]),
	.out(wire_sft308a_out[19:19]));
	soft   sft308a_20
	( 
	.in(wire_sft308a_in[20:20]),
	.out(wire_sft308a_out[20:20]));
	soft   sft308a_21
	( 
	.in(wire_sft308a_in[21:21]),
	.out(wire_sft308a_out[21:21]));
	soft   sft308a_22
	( 
	.in(wire_sft308a_in[22:22]),
	.out(wire_sft308a_out[22:22]));
	soft   sft308a_23
	( 
	.in(wire_sft308a_in[23:23]),
	.out(wire_sft308a_out[23:23]));
	soft   sft308a_24
	( 
	.in(wire_sft308a_in[24:24]),
	.out(wire_sft308a_out[24:24]));
	soft   sft308a_25
	( 
	.in(wire_sft308a_in[25:25]),
	.out(wire_sft308a_out[25:25]));
	soft   sft308a_26
	( 
	.in(wire_sft308a_in[26:26]),
	.out(wire_sft308a_out[26:26]));
	soft   sft308a_27
	( 
	.in(wire_sft308a_in[27:27]),
	.out(wire_sft308a_out[27:27]));
	soft   sft308a_28
	( 
	.in(wire_sft308a_in[28:28]),
	.out(wire_sft308a_out[28:28]));
	soft   sft308a_29
	( 
	.in(wire_sft308a_in[29:29]),
	.out(wire_sft308a_out[29:29]));
	soft   sft308a_30
	( 
	.in(wire_sft308a_in[30:30]),
	.out(wire_sft308a_out[30:30]));
	soft   sft308a_31
	( 
	.in(wire_sft308a_in[31:31]),
	.out(wire_sft308a_out[31:31]));
	soft   sft308a_32
	( 
	.in(wire_sft308a_in[32:32]),
	.out(wire_sft308a_out[32:32]));
	soft   sft308a_33
	( 
	.in(wire_sft308a_in[33:33]),
	.out(wire_sft308a_out[33:33]));
	soft   sft308a_34
	( 
	.in(wire_sft308a_in[34:34]),
	.out(wire_sft308a_out[34:34]));
	soft   sft308a_35
	( 
	.in(wire_sft308a_in[35:35]),
	.out(wire_sft308a_out[35:35]));
	soft   sft308a_36
	( 
	.in(wire_sft308a_in[36:36]),
	.out(wire_sft308a_out[36:36]));
	soft   sft308a_37
	( 
	.in(wire_sft308a_in[37:37]),
	.out(wire_sft308a_out[37:37]));
	soft   sft308a_38
	( 
	.in(wire_sft308a_in[38:38]),
	.out(wire_sft308a_out[38:38]));
	soft   sft308a_39
	( 
	.in(wire_sft308a_in[39:39]),
	.out(wire_sft308a_out[39:39]));
	soft   sft308a_40
	( 
	.in(wire_sft308a_in[40:40]),
	.out(wire_sft308a_out[40:40]));
	soft   sft308a_41
	( 
	.in(wire_sft308a_in[41:41]),
	.out(wire_sft308a_out[41:41]));
	soft   sft308a_42
	( 
	.in(wire_sft308a_in[42:42]),
	.out(wire_sft308a_out[42:42]));
	soft   sft308a_43
	( 
	.in(wire_sft308a_in[43:43]),
	.out(wire_sft308a_out[43:43]));
	soft   sft308a_44
	( 
	.in(wire_sft308a_in[44:44]),
	.out(wire_sft308a_out[44:44]));
	soft   sft308a_45
	( 
	.in(wire_sft308a_in[45:45]),
	.out(wire_sft308a_out[45:45]));
	soft   sft308a_46
	( 
	.in(wire_sft308a_in[46:46]),
	.out(wire_sft308a_out[46:46]));
	soft   sft308a_47
	( 
	.in(wire_sft308a_in[47:47]),
	.out(wire_sft308a_out[47:47]));
	soft   sft308a_48
	( 
	.in(wire_sft308a_in[48:48]),
	.out(wire_sft308a_out[48:48]));
	soft   sft308a_49
	( 
	.in(wire_sft308a_in[49:49]),
	.out(wire_sft308a_out[49:49]));
	soft   sft308a_50
	( 
	.in(wire_sft308a_in[50:50]),
	.out(wire_sft308a_out[50:50]));
	soft   sft308a_51
	( 
	.in(wire_sft308a_in[51:51]),
	.out(wire_sft308a_out[51:51]));
	soft   sft308a_52
	( 
	.in(wire_sft308a_in[52:52]),
	.out(wire_sft308a_out[52:52]));
	soft   sft308a_53
	( 
	.in(wire_sft308a_in[53:53]),
	.out(wire_sft308a_out[53:53]));
	soft   sft308a_54
	( 
	.in(wire_sft308a_in[54:54]),
	.out(wire_sft308a_out[54:54]));
	soft   sft308a_55
	( 
	.in(wire_sft308a_in[55:55]),
	.out(wire_sft308a_out[55:55]));
	soft   sft308a_56
	( 
	.in(wire_sft308a_in[56:56]),
	.out(wire_sft308a_out[56:56]));
	soft   sft308a_57
	( 
	.in(wire_sft308a_in[57:57]),
	.out(wire_sft308a_out[57:57]));
	soft   sft308a_58
	( 
	.in(wire_sft308a_in[58:58]),
	.out(wire_sft308a_out[58:58]));
	soft   sft308a_59
	( 
	.in(wire_sft308a_in[59:59]),
	.out(wire_sft308a_out[59:59]));
	soft   sft308a_60
	( 
	.in(wire_sft308a_in[60:60]),
	.out(wire_sft308a_out[60:60]));
	soft   sft308a_61
	( 
	.in(wire_sft308a_in[61:61]),
	.out(wire_sft308a_out[61:61]));
	soft   sft308a_62
	( 
	.in(wire_sft308a_in[62:62]),
	.out(wire_sft308a_out[62:62]));
	soft   sft308a_63
	( 
	.in(wire_sft308a_in[63:63]),
	.out(wire_sft308a_out[63:63]));
	soft   sft308a_64
	( 
	.in(wire_sft308a_in[64:64]),
	.out(wire_sft308a_out[64:64]));
	soft   sft308a_65
	( 
	.in(wire_sft308a_in[65:65]),
	.out(wire_sft308a_out[65:65]));
	soft   sft308a_66
	( 
	.in(wire_sft308a_in[66:66]),
	.out(wire_sft308a_out[66:66]));
	soft   sft308a_67
	( 
	.in(wire_sft308a_in[67:67]),
	.out(wire_sft308a_out[67:67]));
	soft   sft308a_68
	( 
	.in(wire_sft308a_in[68:68]),
	.out(wire_sft308a_out[68:68]));
	soft   sft308a_69
	( 
	.in(wire_sft308a_in[69:69]),
	.out(wire_sft308a_out[69:69]));
	soft   sft308a_70
	( 
	.in(wire_sft308a_in[70:70]),
	.out(wire_sft308a_out[70:70]));
	soft   sft308a_71
	( 
	.in(wire_sft308a_in[71:71]),
	.out(wire_sft308a_out[71:71]));
	soft   sft308a_72
	( 
	.in(wire_sft308a_in[72:72]),
	.out(wire_sft308a_out[72:72]));
	soft   sft308a_73
	( 
	.in(wire_sft308a_in[73:73]),
	.out(wire_sft308a_out[73:73]));
	soft   sft308a_74
	( 
	.in(wire_sft308a_in[74:74]),
	.out(wire_sft308a_out[74:74]));
	soft   sft308a_75
	( 
	.in(wire_sft308a_in[75:75]),
	.out(wire_sft308a_out[75:75]));
	soft   sft308a_76
	( 
	.in(wire_sft308a_in[76:76]),
	.out(wire_sft308a_out[76:76]));
	soft   sft308a_77
	( 
	.in(wire_sft308a_in[77:77]),
	.out(wire_sft308a_out[77:77]));
	soft   sft308a_78
	( 
	.in(wire_sft308a_in[78:78]),
	.out(wire_sft308a_out[78:78]));
	soft   sft308a_79
	( 
	.in(wire_sft308a_in[79:79]),
	.out(wire_sft308a_out[79:79]));
	soft   sft308a_80
	( 
	.in(wire_sft308a_in[80:80]),
	.out(wire_sft308a_out[80:80]));
	soft   sft308a_81
	( 
	.in(wire_sft308a_in[81:81]),
	.out(wire_sft308a_out[81:81]));
	soft   sft308a_82
	( 
	.in(wire_sft308a_in[82:82]),
	.out(wire_sft308a_out[82:82]));
	soft   sft308a_83
	( 
	.in(wire_sft308a_in[83:83]),
	.out(wire_sft308a_out[83:83]));
	soft   sft308a_84
	( 
	.in(wire_sft308a_in[84:84]),
	.out(wire_sft308a_out[84:84]));
	soft   sft308a_85
	( 
	.in(wire_sft308a_in[85:85]),
	.out(wire_sft308a_out[85:85]));
	soft   sft308a_86
	( 
	.in(wire_sft308a_in[86:86]),
	.out(wire_sft308a_out[86:86]));
	soft   sft308a_87
	( 
	.in(wire_sft308a_in[87:87]),
	.out(wire_sft308a_out[87:87]));
	soft   sft308a_88
	( 
	.in(wire_sft308a_in[88:88]),
	.out(wire_sft308a_out[88:88]));
	assign
		wire_sft308a_in = {w1455w, {dffe302, {dffe301, {dffe300, {dffe299, {dffe298, {dffe297, {dffe296, {dffe295, {dffe294, {dffe293, {dffe292, {dffe291, {dffe290, {dffe289, {dffe288, {dffe287, {wire_sft306a_out[71], {wire_sft306a_out[70], {wire_sft306a_out[69], {wire_sft306a_out[68], {wire_sft306a_out[67], {wire_sft306a_out[66], {wire_sft306a_out[65], {wire_sft306a_out[64], {wire_sft306a_out[63], {wire_sft306a_out[62], {wire_sft306a_out[61], {wire_sft306a_out[60], {wire_sft306a_out[59], {wire_sft306a_out[58], {wire_sft306a_out[57], {wire_sft306a_out[56], {wire_sft306a_out[55], {wire_sft306a_out[54], {wire_sft306a_out[53], {wire_sft306a_out[52], {wire_sft306a_out[51], {wire_sft306a_out[50], {wire_sft306a_out[49], {wire_sft306a_out[48], {wire_sft306a_out[47], {wire_sft306a_out[46], {wire_sft306a_out[45], {wire_sft306a_out[44], {wire_sft306a_out[43], {wire_sft306a_out[42], {wire_sft306a_out[41], {wire_sft306a_out[40], {wire_sft306a_out[39], {wire_sft306a_out[38], {wire_sft306a_out[37], {wire_sft306a_out[36], {wire_sft306a_out[35], {wire_sft306a_out[34], {wire_sft306a_out[33], {wire_sft306a_out[32], {wire_sft306a_out[31], {wire_sft306a_out[30], {wire_sft306a_out[29], {wire_sft306a_out[28], {wire_sft306a_out[27], {wire_sft306a_out[26], {wire_sft306a_out[25], {wire_sft306a_out[24], {wire_sft306a_out[23], {wire_sft306a_out[22], {wire_sft306a_out[21], {wire_sft306a_out[20], {wire_sft306a_out[19], {wire_sft306a_out[18], {dffe88, {dffe85, {dffe82, {dffe79, {dffe76, {dffe73, {dffe70, {dffe67, {dffe64, {dffe61, {dffe58, {dffe55, {dffe52, {dffe49, {dffe46, {dffe43, {dffe40, dffe37}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft309a_0
	( 
	.in(wire_sft309a_in[0:0]),
	.out(wire_sft309a_out[0:0]));
	soft   sft309a_1
	( 
	.in(wire_sft309a_in[1:1]),
	.out(wire_sft309a_out[1:1]));
	soft   sft309a_2
	( 
	.in(wire_sft309a_in[2:2]),
	.out(wire_sft309a_out[2:2]));
	soft   sft309a_3
	( 
	.in(wire_sft309a_in[3:3]),
	.out(wire_sft309a_out[3:3]));
	soft   sft309a_4
	( 
	.in(wire_sft309a_in[4:4]),
	.out(wire_sft309a_out[4:4]));
	soft   sft309a_5
	( 
	.in(wire_sft309a_in[5:5]),
	.out(wire_sft309a_out[5:5]));
	soft   sft309a_6
	( 
	.in(wire_sft309a_in[6:6]),
	.out(wire_sft309a_out[6:6]));
	soft   sft309a_7
	( 
	.in(wire_sft309a_in[7:7]),
	.out(wire_sft309a_out[7:7]));
	soft   sft309a_8
	( 
	.in(wire_sft309a_in[8:8]),
	.out(wire_sft309a_out[8:8]));
	soft   sft309a_9
	( 
	.in(wire_sft309a_in[9:9]),
	.out(wire_sft309a_out[9:9]));
	soft   sft309a_10
	( 
	.in(wire_sft309a_in[10:10]),
	.out(wire_sft309a_out[10:10]));
	soft   sft309a_11
	( 
	.in(wire_sft309a_in[11:11]),
	.out(wire_sft309a_out[11:11]));
	soft   sft309a_12
	( 
	.in(wire_sft309a_in[12:12]),
	.out(wire_sft309a_out[12:12]));
	soft   sft309a_13
	( 
	.in(wire_sft309a_in[13:13]),
	.out(wire_sft309a_out[13:13]));
	soft   sft309a_14
	( 
	.in(wire_sft309a_in[14:14]),
	.out(wire_sft309a_out[14:14]));
	soft   sft309a_15
	( 
	.in(wire_sft309a_in[15:15]),
	.out(wire_sft309a_out[15:15]));
	soft   sft309a_16
	( 
	.in(wire_sft309a_in[16:16]),
	.out(wire_sft309a_out[16:16]));
	soft   sft309a_17
	( 
	.in(wire_sft309a_in[17:17]),
	.out(wire_sft309a_out[17:17]));
	soft   sft309a_18
	( 
	.in(wire_sft309a_in[18:18]),
	.out(wire_sft309a_out[18:18]));
	soft   sft309a_19
	( 
	.in(wire_sft309a_in[19:19]),
	.out(wire_sft309a_out[19:19]));
	soft   sft309a_20
	( 
	.in(wire_sft309a_in[20:20]),
	.out(wire_sft309a_out[20:20]));
	soft   sft309a_21
	( 
	.in(wire_sft309a_in[21:21]),
	.out(wire_sft309a_out[21:21]));
	soft   sft309a_22
	( 
	.in(wire_sft309a_in[22:22]),
	.out(wire_sft309a_out[22:22]));
	soft   sft309a_23
	( 
	.in(wire_sft309a_in[23:23]),
	.out(wire_sft309a_out[23:23]));
	soft   sft309a_24
	( 
	.in(wire_sft309a_in[24:24]),
	.out(wire_sft309a_out[24:24]));
	soft   sft309a_25
	( 
	.in(wire_sft309a_in[25:25]),
	.out(wire_sft309a_out[25:25]));
	soft   sft309a_26
	( 
	.in(wire_sft309a_in[26:26]),
	.out(wire_sft309a_out[26:26]));
	soft   sft309a_27
	( 
	.in(wire_sft309a_in[27:27]),
	.out(wire_sft309a_out[27:27]));
	soft   sft309a_28
	( 
	.in(wire_sft309a_in[28:28]),
	.out(wire_sft309a_out[28:28]));
	soft   sft309a_29
	( 
	.in(wire_sft309a_in[29:29]),
	.out(wire_sft309a_out[29:29]));
	soft   sft309a_30
	( 
	.in(wire_sft309a_in[30:30]),
	.out(wire_sft309a_out[30:30]));
	soft   sft309a_31
	( 
	.in(wire_sft309a_in[31:31]),
	.out(wire_sft309a_out[31:31]));
	soft   sft309a_32
	( 
	.in(wire_sft309a_in[32:32]),
	.out(wire_sft309a_out[32:32]));
	soft   sft309a_33
	( 
	.in(wire_sft309a_in[33:33]),
	.out(wire_sft309a_out[33:33]));
	soft   sft309a_34
	( 
	.in(wire_sft309a_in[34:34]),
	.out(wire_sft309a_out[34:34]));
	soft   sft309a_35
	( 
	.in(wire_sft309a_in[35:35]),
	.out(wire_sft309a_out[35:35]));
	soft   sft309a_36
	( 
	.in(wire_sft309a_in[36:36]),
	.out(wire_sft309a_out[36:36]));
	soft   sft309a_37
	( 
	.in(wire_sft309a_in[37:37]),
	.out(wire_sft309a_out[37:37]));
	soft   sft309a_38
	( 
	.in(wire_sft309a_in[38:38]),
	.out(wire_sft309a_out[38:38]));
	soft   sft309a_39
	( 
	.in(wire_sft309a_in[39:39]),
	.out(wire_sft309a_out[39:39]));
	soft   sft309a_40
	( 
	.in(wire_sft309a_in[40:40]),
	.out(wire_sft309a_out[40:40]));
	soft   sft309a_41
	( 
	.in(wire_sft309a_in[41:41]),
	.out(wire_sft309a_out[41:41]));
	soft   sft309a_42
	( 
	.in(wire_sft309a_in[42:42]),
	.out(wire_sft309a_out[42:42]));
	soft   sft309a_43
	( 
	.in(wire_sft309a_in[43:43]),
	.out(wire_sft309a_out[43:43]));
	soft   sft309a_44
	( 
	.in(wire_sft309a_in[44:44]),
	.out(wire_sft309a_out[44:44]));
	soft   sft309a_45
	( 
	.in(wire_sft309a_in[45:45]),
	.out(wire_sft309a_out[45:45]));
	soft   sft309a_46
	( 
	.in(wire_sft309a_in[46:46]),
	.out(wire_sft309a_out[46:46]));
	soft   sft309a_47
	( 
	.in(wire_sft309a_in[47:47]),
	.out(wire_sft309a_out[47:47]));
	soft   sft309a_48
	( 
	.in(wire_sft309a_in[48:48]),
	.out(wire_sft309a_out[48:48]));
	soft   sft309a_49
	( 
	.in(wire_sft309a_in[49:49]),
	.out(wire_sft309a_out[49:49]));
	soft   sft309a_50
	( 
	.in(wire_sft309a_in[50:50]),
	.out(wire_sft309a_out[50:50]));
	soft   sft309a_51
	( 
	.in(wire_sft309a_in[51:51]),
	.out(wire_sft309a_out[51:51]));
	soft   sft309a_52
	( 
	.in(wire_sft309a_in[52:52]),
	.out(wire_sft309a_out[52:52]));
	soft   sft309a_53
	( 
	.in(wire_sft309a_in[53:53]),
	.out(wire_sft309a_out[53:53]));
	soft   sft309a_54
	( 
	.in(wire_sft309a_in[54:54]),
	.out(wire_sft309a_out[54:54]));
	soft   sft309a_55
	( 
	.in(wire_sft309a_in[55:55]),
	.out(wire_sft309a_out[55:55]));
	soft   sft309a_56
	( 
	.in(wire_sft309a_in[56:56]),
	.out(wire_sft309a_out[56:56]));
	soft   sft309a_57
	( 
	.in(wire_sft309a_in[57:57]),
	.out(wire_sft309a_out[57:57]));
	soft   sft309a_58
	( 
	.in(wire_sft309a_in[58:58]),
	.out(wire_sft309a_out[58:58]));
	soft   sft309a_59
	( 
	.in(wire_sft309a_in[59:59]),
	.out(wire_sft309a_out[59:59]));
	soft   sft309a_60
	( 
	.in(wire_sft309a_in[60:60]),
	.out(wire_sft309a_out[60:60]));
	soft   sft309a_61
	( 
	.in(wire_sft309a_in[61:61]),
	.out(wire_sft309a_out[61:61]));
	soft   sft309a_62
	( 
	.in(wire_sft309a_in[62:62]),
	.out(wire_sft309a_out[62:62]));
	soft   sft309a_63
	( 
	.in(wire_sft309a_in[63:63]),
	.out(wire_sft309a_out[63:63]));
	soft   sft309a_64
	( 
	.in(wire_sft309a_in[64:64]),
	.out(wire_sft309a_out[64:64]));
	soft   sft309a_65
	( 
	.in(wire_sft309a_in[65:65]),
	.out(wire_sft309a_out[65:65]));
	soft   sft309a_66
	( 
	.in(wire_sft309a_in[66:66]),
	.out(wire_sft309a_out[66:66]));
	soft   sft309a_67
	( 
	.in(wire_sft309a_in[67:67]),
	.out(wire_sft309a_out[67:67]));
	soft   sft309a_68
	( 
	.in(wire_sft309a_in[68:68]),
	.out(wire_sft309a_out[68:68]));
	soft   sft309a_69
	( 
	.in(wire_sft309a_in[69:69]),
	.out(wire_sft309a_out[69:69]));
	soft   sft309a_70
	( 
	.in(wire_sft309a_in[70:70]),
	.out(wire_sft309a_out[70:70]));
	soft   sft309a_71
	( 
	.in(wire_sft309a_in[71:71]),
	.out(wire_sft309a_out[71:71]));
	soft   sft309a_72
	( 
	.in(wire_sft309a_in[72:72]),
	.out(wire_sft309a_out[72:72]));
	soft   sft309a_73
	( 
	.in(wire_sft309a_in[73:73]),
	.out(wire_sft309a_out[73:73]));
	soft   sft309a_74
	( 
	.in(wire_sft309a_in[74:74]),
	.out(wire_sft309a_out[74:74]));
	soft   sft309a_75
	( 
	.in(wire_sft309a_in[75:75]),
	.out(wire_sft309a_out[75:75]));
	soft   sft309a_76
	( 
	.in(wire_sft309a_in[76:76]),
	.out(wire_sft309a_out[76:76]));
	soft   sft309a_77
	( 
	.in(wire_sft309a_in[77:77]),
	.out(wire_sft309a_out[77:77]));
	soft   sft309a_78
	( 
	.in(wire_sft309a_in[78:78]),
	.out(wire_sft309a_out[78:78]));
	soft   sft309a_79
	( 
	.in(wire_sft309a_in[79:79]),
	.out(wire_sft309a_out[79:79]));
	soft   sft309a_80
	( 
	.in(wire_sft309a_in[80:80]),
	.out(wire_sft309a_out[80:80]));
	soft   sft309a_81
	( 
	.in(wire_sft309a_in[81:81]),
	.out(wire_sft309a_out[81:81]));
	soft   sft309a_82
	( 
	.in(wire_sft309a_in[82:82]),
	.out(wire_sft309a_out[82:82]));
	soft   sft309a_83
	( 
	.in(wire_sft309a_in[83:83]),
	.out(wire_sft309a_out[83:83]));
	soft   sft309a_84
	( 
	.in(wire_sft309a_in[84:84]),
	.out(wire_sft309a_out[84:84]));
	soft   sft309a_85
	( 
	.in(wire_sft309a_in[85:85]),
	.out(wire_sft309a_out[85:85]));
	soft   sft309a_86
	( 
	.in(wire_sft309a_in[86:86]),
	.out(wire_sft309a_out[86:86]));
	soft   sft309a_87
	( 
	.in(wire_sft309a_in[87:87]),
	.out(wire_sft309a_out[87:87]));
	soft   sft309a_88
	( 
	.in(wire_sft309a_in[88:88]),
	.out(wire_sft309a_out[88:88]));
	assign
		wire_sft309a_in = {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {wire_sft306a_out[72], {wire_sft318a_out[53], {wire_sft318a_out[52], {wire_sft318a_out[51], {wire_sft318a_out[50], {wire_sft318a_out[49], {wire_sft318a_out[48], {wire_sft318a_out[47], {wire_sft318a_out[46], {wire_sft318a_out[45], {wire_sft318a_out[44], {wire_sft318a_out[43], {wire_sft318a_out[42], {wire_sft318a_out[41], {wire_sft318a_out[40], {wire_sft318a_out[39], {wire_sft318a_out[38], {wire_sft318a_out[37], {wire_sft318a_out[36], {wire_sft318a_out[35], {wire_sft318a_out[34], {wire_sft318a_out[33], {wire_sft318a_out[32], {wire_sft318a_out[31], {wire_sft318a_out[30], {wire_sft318a_out[29], {wire_sft318a_out[28], {wire_sft318a_out[27], {wire_sft318a_out[26], {wire_sft318a_out[25], {wire_sft318a_out[24], {wire_sft318a_out[23], {wire_sft318a_out[22], {wire_sft318a_out[21], {wire_sft318a_out[20], {wire_sft318a_out[19], {wire_sft318a_out[18], {wire_sft318a_out[17], {wire_sft318a_out[16], {wire_sft318a_out[15], {wire_sft318a_out[14], {wire_sft318a_out[13], {wire_sft318a_out[12], {wire_sft318a_out[11], {wire_sft318a_out[10], {wire_sft318a_out[9], {wire_sft318a_out[8], {wire_sft318a_out[7], {wire_sft318a_out[6], {wire_sft318a_out[5], {wire_sft318a_out[4], {wire_sft318a_out[3], {wire_sft318a_out[2], {wire_sft318a_out[1], {wire_sft318a_out[0], {wire_sft306a_out[17], {wire_sft306a_out[16], {wire_sft306a_out[15], {wire_sft306a_out[14], {wire_sft306a_out[13], {wire_sft306a_out[12], {wire_sft306a_out[11], {wire_sft306a_out[10], {wire_sft306a_out[9], {wire_sft306a_out[8], {wire_sft306a_out[7], {wire_sft306a_out[6], {wire_sft306a_out[5], {wire_sft306a_out[4], {wire_sft306a_out[3], {wire_sft306a_out[2], {wire_sft306a_out[1], wire_sft306a_out[0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft310a_0
	( 
	.in(wire_sft310a_in[0:0]),
	.out(wire_sft310a_out[0:0]));
	soft   sft310a_1
	( 
	.in(wire_sft310a_in[1:1]),
	.out(wire_sft310a_out[1:1]));
	soft   sft310a_2
	( 
	.in(wire_sft310a_in[2:2]),
	.out(wire_sft310a_out[2:2]));
	soft   sft310a_3
	( 
	.in(wire_sft310a_in[3:3]),
	.out(wire_sft310a_out[3:3]));
	soft   sft310a_4
	( 
	.in(wire_sft310a_in[4:4]),
	.out(wire_sft310a_out[4:4]));
	soft   sft310a_5
	( 
	.in(wire_sft310a_in[5:5]),
	.out(wire_sft310a_out[5:5]));
	soft   sft310a_6
	( 
	.in(wire_sft310a_in[6:6]),
	.out(wire_sft310a_out[6:6]));
	soft   sft310a_7
	( 
	.in(wire_sft310a_in[7:7]),
	.out(wire_sft310a_out[7:7]));
	soft   sft310a_8
	( 
	.in(wire_sft310a_in[8:8]),
	.out(wire_sft310a_out[8:8]));
	soft   sft310a_9
	( 
	.in(wire_sft310a_in[9:9]),
	.out(wire_sft310a_out[9:9]));
	soft   sft310a_10
	( 
	.in(wire_sft310a_in[10:10]),
	.out(wire_sft310a_out[10:10]));
	soft   sft310a_11
	( 
	.in(wire_sft310a_in[11:11]),
	.out(wire_sft310a_out[11:11]));
	soft   sft310a_12
	( 
	.in(wire_sft310a_in[12:12]),
	.out(wire_sft310a_out[12:12]));
	soft   sft310a_13
	( 
	.in(wire_sft310a_in[13:13]),
	.out(wire_sft310a_out[13:13]));
	soft   sft310a_14
	( 
	.in(wire_sft310a_in[14:14]),
	.out(wire_sft310a_out[14:14]));
	soft   sft310a_15
	( 
	.in(wire_sft310a_in[15:15]),
	.out(wire_sft310a_out[15:15]));
	soft   sft310a_16
	( 
	.in(wire_sft310a_in[16:16]),
	.out(wire_sft310a_out[16:16]));
	soft   sft310a_17
	( 
	.in(wire_sft310a_in[17:17]),
	.out(wire_sft310a_out[17:17]));
	soft   sft310a_18
	( 
	.in(wire_sft310a_in[18:18]),
	.out(wire_sft310a_out[18:18]));
	soft   sft310a_19
	( 
	.in(wire_sft310a_in[19:19]),
	.out(wire_sft310a_out[19:19]));
	soft   sft310a_20
	( 
	.in(wire_sft310a_in[20:20]),
	.out(wire_sft310a_out[20:20]));
	soft   sft310a_21
	( 
	.in(wire_sft310a_in[21:21]),
	.out(wire_sft310a_out[21:21]));
	soft   sft310a_22
	( 
	.in(wire_sft310a_in[22:22]),
	.out(wire_sft310a_out[22:22]));
	soft   sft310a_23
	( 
	.in(wire_sft310a_in[23:23]),
	.out(wire_sft310a_out[23:23]));
	soft   sft310a_24
	( 
	.in(wire_sft310a_in[24:24]),
	.out(wire_sft310a_out[24:24]));
	soft   sft310a_25
	( 
	.in(wire_sft310a_in[25:25]),
	.out(wire_sft310a_out[25:25]));
	soft   sft310a_26
	( 
	.in(wire_sft310a_in[26:26]),
	.out(wire_sft310a_out[26:26]));
	soft   sft310a_27
	( 
	.in(wire_sft310a_in[27:27]),
	.out(wire_sft310a_out[27:27]));
	soft   sft310a_28
	( 
	.in(wire_sft310a_in[28:28]),
	.out(wire_sft310a_out[28:28]));
	soft   sft310a_29
	( 
	.in(wire_sft310a_in[29:29]),
	.out(wire_sft310a_out[29:29]));
	soft   sft310a_30
	( 
	.in(wire_sft310a_in[30:30]),
	.out(wire_sft310a_out[30:30]));
	soft   sft310a_31
	( 
	.in(wire_sft310a_in[31:31]),
	.out(wire_sft310a_out[31:31]));
	soft   sft310a_32
	( 
	.in(wire_sft310a_in[32:32]),
	.out(wire_sft310a_out[32:32]));
	soft   sft310a_33
	( 
	.in(wire_sft310a_in[33:33]),
	.out(wire_sft310a_out[33:33]));
	soft   sft310a_34
	( 
	.in(wire_sft310a_in[34:34]),
	.out(wire_sft310a_out[34:34]));
	soft   sft310a_35
	( 
	.in(wire_sft310a_in[35:35]),
	.out(wire_sft310a_out[35:35]));
	soft   sft310a_36
	( 
	.in(wire_sft310a_in[36:36]),
	.out(wire_sft310a_out[36:36]));
	soft   sft310a_37
	( 
	.in(wire_sft310a_in[37:37]),
	.out(wire_sft310a_out[37:37]));
	soft   sft310a_38
	( 
	.in(wire_sft310a_in[38:38]),
	.out(wire_sft310a_out[38:38]));
	soft   sft310a_39
	( 
	.in(wire_sft310a_in[39:39]),
	.out(wire_sft310a_out[39:39]));
	soft   sft310a_40
	( 
	.in(wire_sft310a_in[40:40]),
	.out(wire_sft310a_out[40:40]));
	soft   sft310a_41
	( 
	.in(wire_sft310a_in[41:41]),
	.out(wire_sft310a_out[41:41]));
	soft   sft310a_42
	( 
	.in(wire_sft310a_in[42:42]),
	.out(wire_sft310a_out[42:42]));
	soft   sft310a_43
	( 
	.in(wire_sft310a_in[43:43]),
	.out(wire_sft310a_out[43:43]));
	soft   sft310a_44
	( 
	.in(wire_sft310a_in[44:44]),
	.out(wire_sft310a_out[44:44]));
	soft   sft310a_45
	( 
	.in(wire_sft310a_in[45:45]),
	.out(wire_sft310a_out[45:45]));
	soft   sft310a_46
	( 
	.in(wire_sft310a_in[46:46]),
	.out(wire_sft310a_out[46:46]));
	soft   sft310a_47
	( 
	.in(wire_sft310a_in[47:47]),
	.out(wire_sft310a_out[47:47]));
	soft   sft310a_48
	( 
	.in(wire_sft310a_in[48:48]),
	.out(wire_sft310a_out[48:48]));
	soft   sft310a_49
	( 
	.in(wire_sft310a_in[49:49]),
	.out(wire_sft310a_out[49:49]));
	soft   sft310a_50
	( 
	.in(wire_sft310a_in[50:50]),
	.out(wire_sft310a_out[50:50]));
	soft   sft310a_51
	( 
	.in(wire_sft310a_in[51:51]),
	.out(wire_sft310a_out[51:51]));
	soft   sft310a_52
	( 
	.in(wire_sft310a_in[52:52]),
	.out(wire_sft310a_out[52:52]));
	soft   sft310a_53
	( 
	.in(wire_sft310a_in[53:53]),
	.out(wire_sft310a_out[53:53]));
	soft   sft310a_54
	( 
	.in(wire_sft310a_in[54:54]),
	.out(wire_sft310a_out[54:54]));
	soft   sft310a_55
	( 
	.in(wire_sft310a_in[55:55]),
	.out(wire_sft310a_out[55:55]));
	soft   sft310a_56
	( 
	.in(wire_sft310a_in[56:56]),
	.out(wire_sft310a_out[56:56]));
	soft   sft310a_57
	( 
	.in(wire_sft310a_in[57:57]),
	.out(wire_sft310a_out[57:57]));
	soft   sft310a_58
	( 
	.in(wire_sft310a_in[58:58]),
	.out(wire_sft310a_out[58:58]));
	soft   sft310a_59
	( 
	.in(wire_sft310a_in[59:59]),
	.out(wire_sft310a_out[59:59]));
	soft   sft310a_60
	( 
	.in(wire_sft310a_in[60:60]),
	.out(wire_sft310a_out[60:60]));
	soft   sft310a_61
	( 
	.in(wire_sft310a_in[61:61]),
	.out(wire_sft310a_out[61:61]));
	soft   sft310a_62
	( 
	.in(wire_sft310a_in[62:62]),
	.out(wire_sft310a_out[62:62]));
	soft   sft310a_63
	( 
	.in(wire_sft310a_in[63:63]),
	.out(wire_sft310a_out[63:63]));
	soft   sft310a_64
	( 
	.in(wire_sft310a_in[64:64]),
	.out(wire_sft310a_out[64:64]));
	soft   sft310a_65
	( 
	.in(wire_sft310a_in[65:65]),
	.out(wire_sft310a_out[65:65]));
	soft   sft310a_66
	( 
	.in(wire_sft310a_in[66:66]),
	.out(wire_sft310a_out[66:66]));
	soft   sft310a_67
	( 
	.in(wire_sft310a_in[67:67]),
	.out(wire_sft310a_out[67:67]));
	soft   sft310a_68
	( 
	.in(wire_sft310a_in[68:68]),
	.out(wire_sft310a_out[68:68]));
	soft   sft310a_69
	( 
	.in(wire_sft310a_in[69:69]),
	.out(wire_sft310a_out[69:69]));
	soft   sft310a_70
	( 
	.in(wire_sft310a_in[70:70]),
	.out(wire_sft310a_out[70:70]));
	soft   sft310a_71
	( 
	.in(wire_sft310a_in[71:71]),
	.out(wire_sft310a_out[71:71]));
	soft   sft310a_72
	( 
	.in(wire_sft310a_in[72:72]),
	.out(wire_sft310a_out[72:72]));
	soft   sft310a_73
	( 
	.in(wire_sft310a_in[73:73]),
	.out(wire_sft310a_out[73:73]));
	soft   sft310a_74
	( 
	.in(wire_sft310a_in[74:74]),
	.out(wire_sft310a_out[74:74]));
	soft   sft310a_75
	( 
	.in(wire_sft310a_in[75:75]),
	.out(wire_sft310a_out[75:75]));
	soft   sft310a_76
	( 
	.in(wire_sft310a_in[76:76]),
	.out(wire_sft310a_out[76:76]));
	soft   sft310a_77
	( 
	.in(wire_sft310a_in[77:77]),
	.out(wire_sft310a_out[77:77]));
	soft   sft310a_78
	( 
	.in(wire_sft310a_in[78:78]),
	.out(wire_sft310a_out[78:78]));
	soft   sft310a_79
	( 
	.in(wire_sft310a_in[79:79]),
	.out(wire_sft310a_out[79:79]));
	soft   sft310a_80
	( 
	.in(wire_sft310a_in[80:80]),
	.out(wire_sft310a_out[80:80]));
	soft   sft310a_81
	( 
	.in(wire_sft310a_in[81:81]),
	.out(wire_sft310a_out[81:81]));
	soft   sft310a_82
	( 
	.in(wire_sft310a_in[82:82]),
	.out(wire_sft310a_out[82:82]));
	soft   sft310a_83
	( 
	.in(wire_sft310a_in[83:83]),
	.out(wire_sft310a_out[83:83]));
	soft   sft310a_84
	( 
	.in(wire_sft310a_in[84:84]),
	.out(wire_sft310a_out[84:84]));
	soft   sft310a_85
	( 
	.in(wire_sft310a_in[85:85]),
	.out(wire_sft310a_out[85:85]));
	soft   sft310a_86
	( 
	.in(wire_sft310a_in[86:86]),
	.out(wire_sft310a_out[86:86]));
	soft   sft310a_87
	( 
	.in(wire_sft310a_in[87:87]),
	.out(wire_sft310a_out[87:87]));
	soft   sft310a_88
	( 
	.in(wire_sft310a_in[88:88]),
	.out(wire_sft310a_out[88:88]));
	assign
		wire_sft310a_in = wire_add307_result;
	soft   sft312a_0
	( 
	.in(wire_sft312a_in[0:0]),
	.out(wire_sft312a_out[0:0]));
	soft   sft312a_1
	( 
	.in(wire_sft312a_in[1:1]),
	.out(wire_sft312a_out[1:1]));
	soft   sft312a_2
	( 
	.in(wire_sft312a_in[2:2]),
	.out(wire_sft312a_out[2:2]));
	soft   sft312a_3
	( 
	.in(wire_sft312a_in[3:3]),
	.out(wire_sft312a_out[3:3]));
	soft   sft312a_4
	( 
	.in(wire_sft312a_in[4:4]),
	.out(wire_sft312a_out[4:4]));
	soft   sft312a_5
	( 
	.in(wire_sft312a_in[5:5]),
	.out(wire_sft312a_out[5:5]));
	soft   sft312a_6
	( 
	.in(wire_sft312a_in[6:6]),
	.out(wire_sft312a_out[6:6]));
	soft   sft312a_7
	( 
	.in(wire_sft312a_in[7:7]),
	.out(wire_sft312a_out[7:7]));
	soft   sft312a_8
	( 
	.in(wire_sft312a_in[8:8]),
	.out(wire_sft312a_out[8:8]));
	soft   sft312a_9
	( 
	.in(wire_sft312a_in[9:9]),
	.out(wire_sft312a_out[9:9]));
	soft   sft312a_10
	( 
	.in(wire_sft312a_in[10:10]),
	.out(wire_sft312a_out[10:10]));
	soft   sft312a_11
	( 
	.in(wire_sft312a_in[11:11]),
	.out(wire_sft312a_out[11:11]));
	soft   sft312a_12
	( 
	.in(wire_sft312a_in[12:12]),
	.out(wire_sft312a_out[12:12]));
	soft   sft312a_13
	( 
	.in(wire_sft312a_in[13:13]),
	.out(wire_sft312a_out[13:13]));
	soft   sft312a_14
	( 
	.in(wire_sft312a_in[14:14]),
	.out(wire_sft312a_out[14:14]));
	soft   sft312a_15
	( 
	.in(wire_sft312a_in[15:15]),
	.out(wire_sft312a_out[15:15]));
	soft   sft312a_16
	( 
	.in(wire_sft312a_in[16:16]),
	.out(wire_sft312a_out[16:16]));
	soft   sft312a_17
	( 
	.in(wire_sft312a_in[17:17]),
	.out(wire_sft312a_out[17:17]));
	soft   sft312a_18
	( 
	.in(wire_sft312a_in[18:18]),
	.out(wire_sft312a_out[18:18]));
	soft   sft312a_19
	( 
	.in(wire_sft312a_in[19:19]),
	.out(wire_sft312a_out[19:19]));
	soft   sft312a_20
	( 
	.in(wire_sft312a_in[20:20]),
	.out(wire_sft312a_out[20:20]));
	soft   sft312a_21
	( 
	.in(wire_sft312a_in[21:21]),
	.out(wire_sft312a_out[21:21]));
	soft   sft312a_22
	( 
	.in(wire_sft312a_in[22:22]),
	.out(wire_sft312a_out[22:22]));
	soft   sft312a_23
	( 
	.in(wire_sft312a_in[23:23]),
	.out(wire_sft312a_out[23:23]));
	soft   sft312a_24
	( 
	.in(wire_sft312a_in[24:24]),
	.out(wire_sft312a_out[24:24]));
	soft   sft312a_25
	( 
	.in(wire_sft312a_in[25:25]),
	.out(wire_sft312a_out[25:25]));
	soft   sft312a_26
	( 
	.in(wire_sft312a_in[26:26]),
	.out(wire_sft312a_out[26:26]));
	soft   sft312a_27
	( 
	.in(wire_sft312a_in[27:27]),
	.out(wire_sft312a_out[27:27]));
	soft   sft312a_28
	( 
	.in(wire_sft312a_in[28:28]),
	.out(wire_sft312a_out[28:28]));
	soft   sft312a_29
	( 
	.in(wire_sft312a_in[29:29]),
	.out(wire_sft312a_out[29:29]));
	soft   sft312a_30
	( 
	.in(wire_sft312a_in[30:30]),
	.out(wire_sft312a_out[30:30]));
	soft   sft312a_31
	( 
	.in(wire_sft312a_in[31:31]),
	.out(wire_sft312a_out[31:31]));
	soft   sft312a_32
	( 
	.in(wire_sft312a_in[32:32]),
	.out(wire_sft312a_out[32:32]));
	soft   sft312a_33
	( 
	.in(wire_sft312a_in[33:33]),
	.out(wire_sft312a_out[33:33]));
	soft   sft312a_34
	( 
	.in(wire_sft312a_in[34:34]),
	.out(wire_sft312a_out[34:34]));
	soft   sft312a_35
	( 
	.in(wire_sft312a_in[35:35]),
	.out(wire_sft312a_out[35:35]));
	assign
		wire_sft312a_in = {w1455w, {wire_mac_out16_dataout[16], {wire_mac_out16_dataout[15], {wire_mac_out16_dataout[14], {wire_mac_out16_dataout[13], {wire_mac_out16_dataout[12], {wire_mac_out16_dataout[11], {wire_mac_out16_dataout[10], {wire_mac_out16_dataout[9], {wire_mac_out16_dataout[8], {wire_mac_out16_dataout[7], {wire_mac_out16_dataout[6], {wire_mac_out16_dataout[5], {wire_mac_out16_dataout[4], {wire_mac_out16_dataout[3], {wire_mac_out16_dataout[2], {wire_mac_out16_dataout[1], {wire_mac_out16_dataout[0], {wire_mac_out14_dataout[17], {wire_mac_out14_dataout[16], {wire_mac_out14_dataout[15], {wire_mac_out14_dataout[14], {wire_mac_out14_dataout[13], {wire_mac_out14_dataout[12], {wire_mac_out14_dataout[11], {wire_mac_out14_dataout[10], {wire_mac_out14_dataout[9], {wire_mac_out14_dataout[8], {wire_mac_out14_dataout[7], {wire_mac_out14_dataout[6], {wire_mac_out14_dataout[5], {wire_mac_out14_dataout[4], {wire_mac_out14_dataout[3], {wire_mac_out14_dataout[2], {wire_mac_out14_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft313a_0
	( 
	.in(wire_sft313a_in[0:0]),
	.out(wire_sft313a_out[0:0]));
	soft   sft313a_1
	( 
	.in(wire_sft313a_in[1:1]),
	.out(wire_sft313a_out[1:1]));
	soft   sft313a_2
	( 
	.in(wire_sft313a_in[2:2]),
	.out(wire_sft313a_out[2:2]));
	soft   sft313a_3
	( 
	.in(wire_sft313a_in[3:3]),
	.out(wire_sft313a_out[3:3]));
	soft   sft313a_4
	( 
	.in(wire_sft313a_in[4:4]),
	.out(wire_sft313a_out[4:4]));
	soft   sft313a_5
	( 
	.in(wire_sft313a_in[5:5]),
	.out(wire_sft313a_out[5:5]));
	soft   sft313a_6
	( 
	.in(wire_sft313a_in[6:6]),
	.out(wire_sft313a_out[6:6]));
	soft   sft313a_7
	( 
	.in(wire_sft313a_in[7:7]),
	.out(wire_sft313a_out[7:7]));
	soft   sft313a_8
	( 
	.in(wire_sft313a_in[8:8]),
	.out(wire_sft313a_out[8:8]));
	soft   sft313a_9
	( 
	.in(wire_sft313a_in[9:9]),
	.out(wire_sft313a_out[9:9]));
	soft   sft313a_10
	( 
	.in(wire_sft313a_in[10:10]),
	.out(wire_sft313a_out[10:10]));
	soft   sft313a_11
	( 
	.in(wire_sft313a_in[11:11]),
	.out(wire_sft313a_out[11:11]));
	soft   sft313a_12
	( 
	.in(wire_sft313a_in[12:12]),
	.out(wire_sft313a_out[12:12]));
	soft   sft313a_13
	( 
	.in(wire_sft313a_in[13:13]),
	.out(wire_sft313a_out[13:13]));
	soft   sft313a_14
	( 
	.in(wire_sft313a_in[14:14]),
	.out(wire_sft313a_out[14:14]));
	soft   sft313a_15
	( 
	.in(wire_sft313a_in[15:15]),
	.out(wire_sft313a_out[15:15]));
	soft   sft313a_16
	( 
	.in(wire_sft313a_in[16:16]),
	.out(wire_sft313a_out[16:16]));
	soft   sft313a_17
	( 
	.in(wire_sft313a_in[17:17]),
	.out(wire_sft313a_out[17:17]));
	soft   sft313a_18
	( 
	.in(wire_sft313a_in[18:18]),
	.out(wire_sft313a_out[18:18]));
	soft   sft313a_19
	( 
	.in(wire_sft313a_in[19:19]),
	.out(wire_sft313a_out[19:19]));
	soft   sft313a_20
	( 
	.in(wire_sft313a_in[20:20]),
	.out(wire_sft313a_out[20:20]));
	soft   sft313a_21
	( 
	.in(wire_sft313a_in[21:21]),
	.out(wire_sft313a_out[21:21]));
	soft   sft313a_22
	( 
	.in(wire_sft313a_in[22:22]),
	.out(wire_sft313a_out[22:22]));
	soft   sft313a_23
	( 
	.in(wire_sft313a_in[23:23]),
	.out(wire_sft313a_out[23:23]));
	soft   sft313a_24
	( 
	.in(wire_sft313a_in[24:24]),
	.out(wire_sft313a_out[24:24]));
	soft   sft313a_25
	( 
	.in(wire_sft313a_in[25:25]),
	.out(wire_sft313a_out[25:25]));
	soft   sft313a_26
	( 
	.in(wire_sft313a_in[26:26]),
	.out(wire_sft313a_out[26:26]));
	soft   sft313a_27
	( 
	.in(wire_sft313a_in[27:27]),
	.out(wire_sft313a_out[27:27]));
	soft   sft313a_28
	( 
	.in(wire_sft313a_in[28:28]),
	.out(wire_sft313a_out[28:28]));
	soft   sft313a_29
	( 
	.in(wire_sft313a_in[29:29]),
	.out(wire_sft313a_out[29:29]));
	soft   sft313a_30
	( 
	.in(wire_sft313a_in[30:30]),
	.out(wire_sft313a_out[30:30]));
	soft   sft313a_31
	( 
	.in(wire_sft313a_in[31:31]),
	.out(wire_sft313a_out[31:31]));
	soft   sft313a_32
	( 
	.in(wire_sft313a_in[32:32]),
	.out(wire_sft313a_out[32:32]));
	soft   sft313a_33
	( 
	.in(wire_sft313a_in[33:33]),
	.out(wire_sft313a_out[33:33]));
	soft   sft313a_34
	( 
	.in(wire_sft313a_in[34:34]),
	.out(wire_sft313a_out[34:34]));
	soft   sft313a_35
	( 
	.in(wire_sft313a_in[35:35]),
	.out(wire_sft313a_out[35:35]));
	assign
		wire_sft313a_in = {w1455w, {wire_mac_out10_dataout[34], {wire_mac_out10_dataout[33], {wire_mac_out10_dataout[32], {wire_mac_out10_dataout[31], {wire_mac_out10_dataout[30], {wire_mac_out10_dataout[29], {wire_mac_out10_dataout[28], {wire_mac_out10_dataout[27], {wire_mac_out10_dataout[26], {wire_mac_out10_dataout[25], {wire_mac_out10_dataout[24], {wire_mac_out10_dataout[23], {wire_mac_out10_dataout[22], {wire_mac_out10_dataout[21], {wire_mac_out10_dataout[20], {wire_mac_out10_dataout[19], {wire_mac_out10_dataout[18], {wire_mac_out6_dataout[17], {wire_mac_out6_dataout[16], {wire_mac_out6_dataout[15], {wire_mac_out6_dataout[14], {wire_mac_out6_dataout[13], {wire_mac_out6_dataout[12], {wire_mac_out6_dataout[11], {wire_mac_out6_dataout[10], {wire_mac_out6_dataout[9], {wire_mac_out6_dataout[8], {wire_mac_out6_dataout[7], {wire_mac_out6_dataout[6], {wire_mac_out6_dataout[5], {wire_mac_out6_dataout[4], {wire_mac_out6_dataout[3], {wire_mac_out6_dataout[2], {wire_mac_out6_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft314a_0
	( 
	.in(wire_sft314a_in[0:0]),
	.out(wire_sft314a_out[0:0]));
	soft   sft314a_1
	( 
	.in(wire_sft314a_in[1:1]),
	.out(wire_sft314a_out[1:1]));
	soft   sft314a_2
	( 
	.in(wire_sft314a_in[2:2]),
	.out(wire_sft314a_out[2:2]));
	soft   sft314a_3
	( 
	.in(wire_sft314a_in[3:3]),
	.out(wire_sft314a_out[3:3]));
	soft   sft314a_4
	( 
	.in(wire_sft314a_in[4:4]),
	.out(wire_sft314a_out[4:4]));
	soft   sft314a_5
	( 
	.in(wire_sft314a_in[5:5]),
	.out(wire_sft314a_out[5:5]));
	soft   sft314a_6
	( 
	.in(wire_sft314a_in[6:6]),
	.out(wire_sft314a_out[6:6]));
	soft   sft314a_7
	( 
	.in(wire_sft314a_in[7:7]),
	.out(wire_sft314a_out[7:7]));
	soft   sft314a_8
	( 
	.in(wire_sft314a_in[8:8]),
	.out(wire_sft314a_out[8:8]));
	soft   sft314a_9
	( 
	.in(wire_sft314a_in[9:9]),
	.out(wire_sft314a_out[9:9]));
	soft   sft314a_10
	( 
	.in(wire_sft314a_in[10:10]),
	.out(wire_sft314a_out[10:10]));
	soft   sft314a_11
	( 
	.in(wire_sft314a_in[11:11]),
	.out(wire_sft314a_out[11:11]));
	soft   sft314a_12
	( 
	.in(wire_sft314a_in[12:12]),
	.out(wire_sft314a_out[12:12]));
	soft   sft314a_13
	( 
	.in(wire_sft314a_in[13:13]),
	.out(wire_sft314a_out[13:13]));
	soft   sft314a_14
	( 
	.in(wire_sft314a_in[14:14]),
	.out(wire_sft314a_out[14:14]));
	soft   sft314a_15
	( 
	.in(wire_sft314a_in[15:15]),
	.out(wire_sft314a_out[15:15]));
	soft   sft314a_16
	( 
	.in(wire_sft314a_in[16:16]),
	.out(wire_sft314a_out[16:16]));
	soft   sft314a_17
	( 
	.in(wire_sft314a_in[17:17]),
	.out(wire_sft314a_out[17:17]));
	soft   sft314a_18
	( 
	.in(wire_sft314a_in[18:18]),
	.out(wire_sft314a_out[18:18]));
	soft   sft314a_19
	( 
	.in(wire_sft314a_in[19:19]),
	.out(wire_sft314a_out[19:19]));
	soft   sft314a_20
	( 
	.in(wire_sft314a_in[20:20]),
	.out(wire_sft314a_out[20:20]));
	soft   sft314a_21
	( 
	.in(wire_sft314a_in[21:21]),
	.out(wire_sft314a_out[21:21]));
	soft   sft314a_22
	( 
	.in(wire_sft314a_in[22:22]),
	.out(wire_sft314a_out[22:22]));
	soft   sft314a_23
	( 
	.in(wire_sft314a_in[23:23]),
	.out(wire_sft314a_out[23:23]));
	soft   sft314a_24
	( 
	.in(wire_sft314a_in[24:24]),
	.out(wire_sft314a_out[24:24]));
	soft   sft314a_25
	( 
	.in(wire_sft314a_in[25:25]),
	.out(wire_sft314a_out[25:25]));
	soft   sft314a_26
	( 
	.in(wire_sft314a_in[26:26]),
	.out(wire_sft314a_out[26:26]));
	soft   sft314a_27
	( 
	.in(wire_sft314a_in[27:27]),
	.out(wire_sft314a_out[27:27]));
	soft   sft314a_28
	( 
	.in(wire_sft314a_in[28:28]),
	.out(wire_sft314a_out[28:28]));
	soft   sft314a_29
	( 
	.in(wire_sft314a_in[29:29]),
	.out(wire_sft314a_out[29:29]));
	soft   sft314a_30
	( 
	.in(wire_sft314a_in[30:30]),
	.out(wire_sft314a_out[30:30]));
	soft   sft314a_31
	( 
	.in(wire_sft314a_in[31:31]),
	.out(wire_sft314a_out[31:31]));
	soft   sft314a_32
	( 
	.in(wire_sft314a_in[32:32]),
	.out(wire_sft314a_out[32:32]));
	soft   sft314a_33
	( 
	.in(wire_sft314a_in[33:33]),
	.out(wire_sft314a_out[33:33]));
	soft   sft314a_34
	( 
	.in(wire_sft314a_in[34:34]),
	.out(wire_sft314a_out[34:34]));
	soft   sft314a_35
	( 
	.in(wire_sft314a_in[35:35]),
	.out(wire_sft314a_out[35:35]));
	assign
		wire_sft314a_in = wire_add311_result;
	soft   sft316a_0
	( 
	.in(wire_sft316a_in[0:0]),
	.out(wire_sft316a_out[0:0]));
	soft   sft316a_1
	( 
	.in(wire_sft316a_in[1:1]),
	.out(wire_sft316a_out[1:1]));
	soft   sft316a_2
	( 
	.in(wire_sft316a_in[2:2]),
	.out(wire_sft316a_out[2:2]));
	soft   sft316a_3
	( 
	.in(wire_sft316a_in[3:3]),
	.out(wire_sft316a_out[3:3]));
	soft   sft316a_4
	( 
	.in(wire_sft316a_in[4:4]),
	.out(wire_sft316a_out[4:4]));
	soft   sft316a_5
	( 
	.in(wire_sft316a_in[5:5]),
	.out(wire_sft316a_out[5:5]));
	soft   sft316a_6
	( 
	.in(wire_sft316a_in[6:6]),
	.out(wire_sft316a_out[6:6]));
	soft   sft316a_7
	( 
	.in(wire_sft316a_in[7:7]),
	.out(wire_sft316a_out[7:7]));
	soft   sft316a_8
	( 
	.in(wire_sft316a_in[8:8]),
	.out(wire_sft316a_out[8:8]));
	soft   sft316a_9
	( 
	.in(wire_sft316a_in[9:9]),
	.out(wire_sft316a_out[9:9]));
	soft   sft316a_10
	( 
	.in(wire_sft316a_in[10:10]),
	.out(wire_sft316a_out[10:10]));
	soft   sft316a_11
	( 
	.in(wire_sft316a_in[11:11]),
	.out(wire_sft316a_out[11:11]));
	soft   sft316a_12
	( 
	.in(wire_sft316a_in[12:12]),
	.out(wire_sft316a_out[12:12]));
	soft   sft316a_13
	( 
	.in(wire_sft316a_in[13:13]),
	.out(wire_sft316a_out[13:13]));
	soft   sft316a_14
	( 
	.in(wire_sft316a_in[14:14]),
	.out(wire_sft316a_out[14:14]));
	soft   sft316a_15
	( 
	.in(wire_sft316a_in[15:15]),
	.out(wire_sft316a_out[15:15]));
	soft   sft316a_16
	( 
	.in(wire_sft316a_in[16:16]),
	.out(wire_sft316a_out[16:16]));
	soft   sft316a_17
	( 
	.in(wire_sft316a_in[17:17]),
	.out(wire_sft316a_out[17:17]));
	soft   sft316a_18
	( 
	.in(wire_sft316a_in[18:18]),
	.out(wire_sft316a_out[18:18]));
	soft   sft316a_19
	( 
	.in(wire_sft316a_in[19:19]),
	.out(wire_sft316a_out[19:19]));
	soft   sft316a_20
	( 
	.in(wire_sft316a_in[20:20]),
	.out(wire_sft316a_out[20:20]));
	soft   sft316a_21
	( 
	.in(wire_sft316a_in[21:21]),
	.out(wire_sft316a_out[21:21]));
	soft   sft316a_22
	( 
	.in(wire_sft316a_in[22:22]),
	.out(wire_sft316a_out[22:22]));
	soft   sft316a_23
	( 
	.in(wire_sft316a_in[23:23]),
	.out(wire_sft316a_out[23:23]));
	soft   sft316a_24
	( 
	.in(wire_sft316a_in[24:24]),
	.out(wire_sft316a_out[24:24]));
	soft   sft316a_25
	( 
	.in(wire_sft316a_in[25:25]),
	.out(wire_sft316a_out[25:25]));
	soft   sft316a_26
	( 
	.in(wire_sft316a_in[26:26]),
	.out(wire_sft316a_out[26:26]));
	soft   sft316a_27
	( 
	.in(wire_sft316a_in[27:27]),
	.out(wire_sft316a_out[27:27]));
	soft   sft316a_28
	( 
	.in(wire_sft316a_in[28:28]),
	.out(wire_sft316a_out[28:28]));
	soft   sft316a_29
	( 
	.in(wire_sft316a_in[29:29]),
	.out(wire_sft316a_out[29:29]));
	soft   sft316a_30
	( 
	.in(wire_sft316a_in[30:30]),
	.out(wire_sft316a_out[30:30]));
	soft   sft316a_31
	( 
	.in(wire_sft316a_in[31:31]),
	.out(wire_sft316a_out[31:31]));
	soft   sft316a_32
	( 
	.in(wire_sft316a_in[32:32]),
	.out(wire_sft316a_out[32:32]));
	soft   sft316a_33
	( 
	.in(wire_sft316a_in[33:33]),
	.out(wire_sft316a_out[33:33]));
	soft   sft316a_34
	( 
	.in(wire_sft316a_in[34:34]),
	.out(wire_sft316a_out[34:34]));
	soft   sft316a_35
	( 
	.in(wire_sft316a_in[35:35]),
	.out(wire_sft316a_out[35:35]));
	soft   sft316a_36
	( 
	.in(wire_sft316a_in[36:36]),
	.out(wire_sft316a_out[36:36]));
	soft   sft316a_37
	( 
	.in(wire_sft316a_in[37:37]),
	.out(wire_sft316a_out[37:37]));
	soft   sft316a_38
	( 
	.in(wire_sft316a_in[38:38]),
	.out(wire_sft316a_out[38:38]));
	soft   sft316a_39
	( 
	.in(wire_sft316a_in[39:39]),
	.out(wire_sft316a_out[39:39]));
	soft   sft316a_40
	( 
	.in(wire_sft316a_in[40:40]),
	.out(wire_sft316a_out[40:40]));
	soft   sft316a_41
	( 
	.in(wire_sft316a_in[41:41]),
	.out(wire_sft316a_out[41:41]));
	soft   sft316a_42
	( 
	.in(wire_sft316a_in[42:42]),
	.out(wire_sft316a_out[42:42]));
	soft   sft316a_43
	( 
	.in(wire_sft316a_in[43:43]),
	.out(wire_sft316a_out[43:43]));
	soft   sft316a_44
	( 
	.in(wire_sft316a_in[44:44]),
	.out(wire_sft316a_out[44:44]));
	soft   sft316a_45
	( 
	.in(wire_sft316a_in[45:45]),
	.out(wire_sft316a_out[45:45]));
	soft   sft316a_46
	( 
	.in(wire_sft316a_in[46:46]),
	.out(wire_sft316a_out[46:46]));
	soft   sft316a_47
	( 
	.in(wire_sft316a_in[47:47]),
	.out(wire_sft316a_out[47:47]));
	soft   sft316a_48
	( 
	.in(wire_sft316a_in[48:48]),
	.out(wire_sft316a_out[48:48]));
	soft   sft316a_49
	( 
	.in(wire_sft316a_in[49:49]),
	.out(wire_sft316a_out[49:49]));
	soft   sft316a_50
	( 
	.in(wire_sft316a_in[50:50]),
	.out(wire_sft316a_out[50:50]));
	soft   sft316a_51
	( 
	.in(wire_sft316a_in[51:51]),
	.out(wire_sft316a_out[51:51]));
	soft   sft316a_52
	( 
	.in(wire_sft316a_in[52:52]),
	.out(wire_sft316a_out[52:52]));
	soft   sft316a_53
	( 
	.in(wire_sft316a_in[53:53]),
	.out(wire_sft316a_out[53:53]));
	assign
		wire_sft316a_in = {w1455w, {dffe285, {dffe282, {dffe279, {dffe276, {dffe273, {dffe270, {dffe267, {dffe264, {dffe261, {dffe258, {dffe255, {dffe252, {dffe249, {dffe246, {dffe243, {dffe240, {dffe237, {dffe233, {dffe229, {dffe225, {dffe221, {dffe217, {dffe213, {dffe209, {dffe205, {dffe201, {dffe197, {dffe193, {dffe189, {dffe185, {dffe181, {dffe177, {dffe173, {dffe169, {dffe165, {dffe161, {dffe157, {dffe153, {dffe149, {dffe145, {dffe141, {dffe137, {dffe133, {dffe129, {dffe125, {dffe121, {dffe117, {dffe113, {dffe109, {dffe105, {dffe101, {dffe97, dffe93}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft317a_0
	( 
	.in(wire_sft317a_in[0:0]),
	.out(wire_sft317a_out[0:0]));
	soft   sft317a_1
	( 
	.in(wire_sft317a_in[1:1]),
	.out(wire_sft317a_out[1:1]));
	soft   sft317a_2
	( 
	.in(wire_sft317a_in[2:2]),
	.out(wire_sft317a_out[2:2]));
	soft   sft317a_3
	( 
	.in(wire_sft317a_in[3:3]),
	.out(wire_sft317a_out[3:3]));
	soft   sft317a_4
	( 
	.in(wire_sft317a_in[4:4]),
	.out(wire_sft317a_out[4:4]));
	soft   sft317a_5
	( 
	.in(wire_sft317a_in[5:5]),
	.out(wire_sft317a_out[5:5]));
	soft   sft317a_6
	( 
	.in(wire_sft317a_in[6:6]),
	.out(wire_sft317a_out[6:6]));
	soft   sft317a_7
	( 
	.in(wire_sft317a_in[7:7]),
	.out(wire_sft317a_out[7:7]));
	soft   sft317a_8
	( 
	.in(wire_sft317a_in[8:8]),
	.out(wire_sft317a_out[8:8]));
	soft   sft317a_9
	( 
	.in(wire_sft317a_in[9:9]),
	.out(wire_sft317a_out[9:9]));
	soft   sft317a_10
	( 
	.in(wire_sft317a_in[10:10]),
	.out(wire_sft317a_out[10:10]));
	soft   sft317a_11
	( 
	.in(wire_sft317a_in[11:11]),
	.out(wire_sft317a_out[11:11]));
	soft   sft317a_12
	( 
	.in(wire_sft317a_in[12:12]),
	.out(wire_sft317a_out[12:12]));
	soft   sft317a_13
	( 
	.in(wire_sft317a_in[13:13]),
	.out(wire_sft317a_out[13:13]));
	soft   sft317a_14
	( 
	.in(wire_sft317a_in[14:14]),
	.out(wire_sft317a_out[14:14]));
	soft   sft317a_15
	( 
	.in(wire_sft317a_in[15:15]),
	.out(wire_sft317a_out[15:15]));
	soft   sft317a_16
	( 
	.in(wire_sft317a_in[16:16]),
	.out(wire_sft317a_out[16:16]));
	soft   sft317a_17
	( 
	.in(wire_sft317a_in[17:17]),
	.out(wire_sft317a_out[17:17]));
	soft   sft317a_18
	( 
	.in(wire_sft317a_in[18:18]),
	.out(wire_sft317a_out[18:18]));
	soft   sft317a_19
	( 
	.in(wire_sft317a_in[19:19]),
	.out(wire_sft317a_out[19:19]));
	soft   sft317a_20
	( 
	.in(wire_sft317a_in[20:20]),
	.out(wire_sft317a_out[20:20]));
	soft   sft317a_21
	( 
	.in(wire_sft317a_in[21:21]),
	.out(wire_sft317a_out[21:21]));
	soft   sft317a_22
	( 
	.in(wire_sft317a_in[22:22]),
	.out(wire_sft317a_out[22:22]));
	soft   sft317a_23
	( 
	.in(wire_sft317a_in[23:23]),
	.out(wire_sft317a_out[23:23]));
	soft   sft317a_24
	( 
	.in(wire_sft317a_in[24:24]),
	.out(wire_sft317a_out[24:24]));
	soft   sft317a_25
	( 
	.in(wire_sft317a_in[25:25]),
	.out(wire_sft317a_out[25:25]));
	soft   sft317a_26
	( 
	.in(wire_sft317a_in[26:26]),
	.out(wire_sft317a_out[26:26]));
	soft   sft317a_27
	( 
	.in(wire_sft317a_in[27:27]),
	.out(wire_sft317a_out[27:27]));
	soft   sft317a_28
	( 
	.in(wire_sft317a_in[28:28]),
	.out(wire_sft317a_out[28:28]));
	soft   sft317a_29
	( 
	.in(wire_sft317a_in[29:29]),
	.out(wire_sft317a_out[29:29]));
	soft   sft317a_30
	( 
	.in(wire_sft317a_in[30:30]),
	.out(wire_sft317a_out[30:30]));
	soft   sft317a_31
	( 
	.in(wire_sft317a_in[31:31]),
	.out(wire_sft317a_out[31:31]));
	soft   sft317a_32
	( 
	.in(wire_sft317a_in[32:32]),
	.out(wire_sft317a_out[32:32]));
	soft   sft317a_33
	( 
	.in(wire_sft317a_in[33:33]),
	.out(wire_sft317a_out[33:33]));
	soft   sft317a_34
	( 
	.in(wire_sft317a_in[34:34]),
	.out(wire_sft317a_out[34:34]));
	soft   sft317a_35
	( 
	.in(wire_sft317a_in[35:35]),
	.out(wire_sft317a_out[35:35]));
	soft   sft317a_36
	( 
	.in(wire_sft317a_in[36:36]),
	.out(wire_sft317a_out[36:36]));
	soft   sft317a_37
	( 
	.in(wire_sft317a_in[37:37]),
	.out(wire_sft317a_out[37:37]));
	soft   sft317a_38
	( 
	.in(wire_sft317a_in[38:38]),
	.out(wire_sft317a_out[38:38]));
	soft   sft317a_39
	( 
	.in(wire_sft317a_in[39:39]),
	.out(wire_sft317a_out[39:39]));
	soft   sft317a_40
	( 
	.in(wire_sft317a_in[40:40]),
	.out(wire_sft317a_out[40:40]));
	soft   sft317a_41
	( 
	.in(wire_sft317a_in[41:41]),
	.out(wire_sft317a_out[41:41]));
	soft   sft317a_42
	( 
	.in(wire_sft317a_in[42:42]),
	.out(wire_sft317a_out[42:42]));
	soft   sft317a_43
	( 
	.in(wire_sft317a_in[43:43]),
	.out(wire_sft317a_out[43:43]));
	soft   sft317a_44
	( 
	.in(wire_sft317a_in[44:44]),
	.out(wire_sft317a_out[44:44]));
	soft   sft317a_45
	( 
	.in(wire_sft317a_in[45:45]),
	.out(wire_sft317a_out[45:45]));
	soft   sft317a_46
	( 
	.in(wire_sft317a_in[46:46]),
	.out(wire_sft317a_out[46:46]));
	soft   sft317a_47
	( 
	.in(wire_sft317a_in[47:47]),
	.out(wire_sft317a_out[47:47]));
	soft   sft317a_48
	( 
	.in(wire_sft317a_in[48:48]),
	.out(wire_sft317a_out[48:48]));
	soft   sft317a_49
	( 
	.in(wire_sft317a_in[49:49]),
	.out(wire_sft317a_out[49:49]));
	soft   sft317a_50
	( 
	.in(wire_sft317a_in[50:50]),
	.out(wire_sft317a_out[50:50]));
	soft   sft317a_51
	( 
	.in(wire_sft317a_in[51:51]),
	.out(wire_sft317a_out[51:51]));
	soft   sft317a_52
	( 
	.in(wire_sft317a_in[52:52]),
	.out(wire_sft317a_out[52:52]));
	soft   sft317a_53
	( 
	.in(wire_sft317a_in[53:53]),
	.out(wire_sft317a_out[53:53]));
	assign
		wire_sft317a_in = {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {w1455w, {dffe234, {dffe230, {dffe226, {dffe222, {dffe218, {dffe214, {dffe210, {dffe206, {dffe202, {dffe198, {dffe194, {dffe190, {dffe186, {dffe182, {dffe178, {dffe174, {dffe170, {dffe166, {dffe162, {dffe158, {dffe154, {dffe150, {dffe146, {dffe142, {dffe138, {dffe134, {dffe130, {dffe126, {dffe122, {dffe118, {dffe114, {dffe110, {dffe106, {dffe102, {dffe98, dffe94}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft318a_0
	( 
	.in(wire_sft318a_in[0:0]),
	.out(wire_sft318a_out[0:0]));
	soft   sft318a_1
	( 
	.in(wire_sft318a_in[1:1]),
	.out(wire_sft318a_out[1:1]));
	soft   sft318a_2
	( 
	.in(wire_sft318a_in[2:2]),
	.out(wire_sft318a_out[2:2]));
	soft   sft318a_3
	( 
	.in(wire_sft318a_in[3:3]),
	.out(wire_sft318a_out[3:3]));
	soft   sft318a_4
	( 
	.in(wire_sft318a_in[4:4]),
	.out(wire_sft318a_out[4:4]));
	soft   sft318a_5
	( 
	.in(wire_sft318a_in[5:5]),
	.out(wire_sft318a_out[5:5]));
	soft   sft318a_6
	( 
	.in(wire_sft318a_in[6:6]),
	.out(wire_sft318a_out[6:6]));
	soft   sft318a_7
	( 
	.in(wire_sft318a_in[7:7]),
	.out(wire_sft318a_out[7:7]));
	soft   sft318a_8
	( 
	.in(wire_sft318a_in[8:8]),
	.out(wire_sft318a_out[8:8]));
	soft   sft318a_9
	( 
	.in(wire_sft318a_in[9:9]),
	.out(wire_sft318a_out[9:9]));
	soft   sft318a_10
	( 
	.in(wire_sft318a_in[10:10]),
	.out(wire_sft318a_out[10:10]));
	soft   sft318a_11
	( 
	.in(wire_sft318a_in[11:11]),
	.out(wire_sft318a_out[11:11]));
	soft   sft318a_12
	( 
	.in(wire_sft318a_in[12:12]),
	.out(wire_sft318a_out[12:12]));
	soft   sft318a_13
	( 
	.in(wire_sft318a_in[13:13]),
	.out(wire_sft318a_out[13:13]));
	soft   sft318a_14
	( 
	.in(wire_sft318a_in[14:14]),
	.out(wire_sft318a_out[14:14]));
	soft   sft318a_15
	( 
	.in(wire_sft318a_in[15:15]),
	.out(wire_sft318a_out[15:15]));
	soft   sft318a_16
	( 
	.in(wire_sft318a_in[16:16]),
	.out(wire_sft318a_out[16:16]));
	soft   sft318a_17
	( 
	.in(wire_sft318a_in[17:17]),
	.out(wire_sft318a_out[17:17]));
	soft   sft318a_18
	( 
	.in(wire_sft318a_in[18:18]),
	.out(wire_sft318a_out[18:18]));
	soft   sft318a_19
	( 
	.in(wire_sft318a_in[19:19]),
	.out(wire_sft318a_out[19:19]));
	soft   sft318a_20
	( 
	.in(wire_sft318a_in[20:20]),
	.out(wire_sft318a_out[20:20]));
	soft   sft318a_21
	( 
	.in(wire_sft318a_in[21:21]),
	.out(wire_sft318a_out[21:21]));
	soft   sft318a_22
	( 
	.in(wire_sft318a_in[22:22]),
	.out(wire_sft318a_out[22:22]));
	soft   sft318a_23
	( 
	.in(wire_sft318a_in[23:23]),
	.out(wire_sft318a_out[23:23]));
	soft   sft318a_24
	( 
	.in(wire_sft318a_in[24:24]),
	.out(wire_sft318a_out[24:24]));
	soft   sft318a_25
	( 
	.in(wire_sft318a_in[25:25]),
	.out(wire_sft318a_out[25:25]));
	soft   sft318a_26
	( 
	.in(wire_sft318a_in[26:26]),
	.out(wire_sft318a_out[26:26]));
	soft   sft318a_27
	( 
	.in(wire_sft318a_in[27:27]),
	.out(wire_sft318a_out[27:27]));
	soft   sft318a_28
	( 
	.in(wire_sft318a_in[28:28]),
	.out(wire_sft318a_out[28:28]));
	soft   sft318a_29
	( 
	.in(wire_sft318a_in[29:29]),
	.out(wire_sft318a_out[29:29]));
	soft   sft318a_30
	( 
	.in(wire_sft318a_in[30:30]),
	.out(wire_sft318a_out[30:30]));
	soft   sft318a_31
	( 
	.in(wire_sft318a_in[31:31]),
	.out(wire_sft318a_out[31:31]));
	soft   sft318a_32
	( 
	.in(wire_sft318a_in[32:32]),
	.out(wire_sft318a_out[32:32]));
	soft   sft318a_33
	( 
	.in(wire_sft318a_in[33:33]),
	.out(wire_sft318a_out[33:33]));
	soft   sft318a_34
	( 
	.in(wire_sft318a_in[34:34]),
	.out(wire_sft318a_out[34:34]));
	soft   sft318a_35
	( 
	.in(wire_sft318a_in[35:35]),
	.out(wire_sft318a_out[35:35]));
	soft   sft318a_36
	( 
	.in(wire_sft318a_in[36:36]),
	.out(wire_sft318a_out[36:36]));
	soft   sft318a_37
	( 
	.in(wire_sft318a_in[37:37]),
	.out(wire_sft318a_out[37:37]));
	soft   sft318a_38
	( 
	.in(wire_sft318a_in[38:38]),
	.out(wire_sft318a_out[38:38]));
	soft   sft318a_39
	( 
	.in(wire_sft318a_in[39:39]),
	.out(wire_sft318a_out[39:39]));
	soft   sft318a_40
	( 
	.in(wire_sft318a_in[40:40]),
	.out(wire_sft318a_out[40:40]));
	soft   sft318a_41
	( 
	.in(wire_sft318a_in[41:41]),
	.out(wire_sft318a_out[41:41]));
	soft   sft318a_42
	( 
	.in(wire_sft318a_in[42:42]),
	.out(wire_sft318a_out[42:42]));
	soft   sft318a_43
	( 
	.in(wire_sft318a_in[43:43]),
	.out(wire_sft318a_out[43:43]));
	soft   sft318a_44
	( 
	.in(wire_sft318a_in[44:44]),
	.out(wire_sft318a_out[44:44]));
	soft   sft318a_45
	( 
	.in(wire_sft318a_in[45:45]),
	.out(wire_sft318a_out[45:45]));
	soft   sft318a_46
	( 
	.in(wire_sft318a_in[46:46]),
	.out(wire_sft318a_out[46:46]));
	soft   sft318a_47
	( 
	.in(wire_sft318a_in[47:47]),
	.out(wire_sft318a_out[47:47]));
	soft   sft318a_48
	( 
	.in(wire_sft318a_in[48:48]),
	.out(wire_sft318a_out[48:48]));
	soft   sft318a_49
	( 
	.in(wire_sft318a_in[49:49]),
	.out(wire_sft318a_out[49:49]));
	soft   sft318a_50
	( 
	.in(wire_sft318a_in[50:50]),
	.out(wire_sft318a_out[50:50]));
	soft   sft318a_51
	( 
	.in(wire_sft318a_in[51:51]),
	.out(wire_sft318a_out[51:51]));
	soft   sft318a_52
	( 
	.in(wire_sft318a_in[52:52]),
	.out(wire_sft318a_out[52:52]));
	soft   sft318a_53
	( 
	.in(wire_sft318a_in[53:53]),
	.out(wire_sft318a_out[53:53]));
	assign
		wire_sft318a_in = wire_add315_result;
	assign
		result = w2206w[105:0],
		w1455w = 1'b0,
		w2206w = {wire_sft310a_out[88:87], wire_sft310a_out[86:85], wire_sft310a_out[84:83], wire_sft310a_out[82:81], wire_sft310a_out[80:79], wire_sft310a_out[78:77], wire_sft310a_out[76:75], wire_sft310a_out[74:73], wire_sft310a_out[72:71], wire_sft310a_out[70:69], wire_sft310a_out[68:67], wire_sft310a_out[66:65], wire_sft310a_out[64:63], wire_sft310a_out[62:61], wire_sft310a_out[60:59], wire_sft310a_out[58:57], wire_sft310a_out[56:55], wire_sft310a_out[54:53], wire_sft310a_out[52:51], wire_sft310a_out[50:49], wire_sft310a_out[48:47], wire_sft310a_out[46:45], wire_sft310a_out[44:43], wire_sft310a_out[42:41], wire_sft310a_out[40:39], wire_sft310a_out[38:37], wire_sft310a_out[36:35], wire_sft310a_out[34:33], wire_sft310a_out[32:31], wire_sft310a_out[30:29], wire_sft310a_out[28:27], wire_sft310a_out[26:25], wire_sft310a_out[24:23], wire_sft310a_out[22:21], wire_sft310a_out[20:19], wire_sft310a_out[18:17], wire_sft310a_out[16:15], wire_sft310a_out[14:13], wire_sft310a_out[12:11], wire_sft310a_out[10:9], wire_sft310a_out[8:7], wire_sft310a_out[6:5], wire_sft310a_out[4:3], wire_sft310a_out[2:1], wire_sft310a_out[0], dffe36, dffe35, dffe34, dffe33, dffe32, dffe31, dffe30, dffe29, dffe28, dffe27, dffe26, dffe25, dffe24, dffe23, dffe22, dffe21, dffe20, dffe19};
endmodule //ALTFP_MULa_mult

//synthesis_resources = dsp_9bit 18 lut 345 reg 519 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTFP_MULa_altfp_mult
	( 
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [63:0]  dataa;
	input   [63:0]  datab;
	output   [63:0]  result;

	reg	dataa_exp_all_one_ff_p1;
	reg	dataa_exp_not_zero_ff_p1;
	reg	dataa_man_not_zero_ff_p1;
	reg	dataa_man_not_zero_ff_p2;
	reg	datab_exp_all_one_ff_p1;
	reg	datab_exp_not_zero_ff_p1;
	reg	datab_man_not_zero_ff_p1;
	reg	datab_man_not_zero_ff_p2;
	reg	[12:0]	delay_exp2_bias;
	reg	[12:0]	delay_exp_bias;
	reg	delay_man_product_msb;
	reg	delay_man_product_msb_p0;
	reg	[11:0]	exp_add_p1;
	reg	[10:0]	exp_result_ff;
	reg	input_is_infinity_dffe_0;
	reg	input_is_infinity_dffe_1;
	reg	input_is_infinity_ff1;
	reg	input_is_nan_dffe_0;
	reg	input_is_nan_dffe_1;
	reg	input_is_nan_ff1;
	reg	input_not_zero_dffe_0;
	reg	input_not_zero_dffe_1;
	reg	input_not_zero_ff1;
	reg	lsb_dffe;
	reg	[51:0]	man_result_ff;
	reg	[52:0]	man_round_p;
	reg	[53:0]	man_round_p2;
	reg	round_dffe;
	reg	[0:0]	sign_node_ff0;
	reg	[0:0]	sign_node_ff1;
	reg	[0:0]	sign_node_ff2;
	reg	[0:0]	sign_node_ff3;
	reg	[0:0]	sign_node_ff4;
	reg	sticky_dffe;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[11:0]	wire_exp_add_adder_pipeline_dffe_Q;
	wire	[11:0]	wire_exp_add_adder_pipeline_dffe_D;
	wire	[12:0]	wire_exp_add_adder_result_int;
	wire	wire_exp_add_adder_aclr;
	wire	wire_exp_add_adder_cin;
	wire	wire_exp_add_adder_clken;
	wire	wire_exp_add_adder_clock;
	wire	[11:0]	wire_exp_add_adder_dataa;
	wire	[11:0]	wire_exp_add_adder_datab;
	wire	[11:0]	wire_exp_add_adder_result;
	wire	[13:0]	wire_exp_adj_adder_result_int;
	wire	wire_exp_adj_adder_cin;
	wire	[12:0]	wire_exp_adj_adder_dataa;
	wire	[12:0]	wire_exp_adj_adder_datab;
	wire	[12:0]	wire_exp_adj_adder_result;
	wire	[12:0]	wire_exp_bias_subtr_dataa;
	wire	[12:0]	wire_exp_bias_subtr_datab;
	wire	[12:0]	wire_exp_bias_subtr_result;
	wire	[53:0]	wire_man_round_adder_dataa;
	wire	[53:0]	wire_man_round_adder_datab;
	wire	[53:0]	wire_man_round_adder_result;
	wire  [105:0]   wire_man_product2_mult_result;
	wire aclr;
	wire  [12:0]  bias;
	wire clk_en;
	wire  [10:0]  dataa_exp_all_one;
	wire  [10:0]  dataa_exp_not_zero;
	wire  [51:0]  dataa_man_not_zero;
	wire  [10:0]  datab_exp_all_one;
	wire  [10:0]  datab_exp_not_zero;
	wire  [51:0]  datab_man_not_zero;
	wire  exp_is_inf;
	wire  exp_is_zero;
	wire  [12:0]  expmod;
	wire  [10:0]  inf_num;
	wire  lsb_bit;
	wire  [52:0]  man_result_round;
	wire  [53:0]  man_shift_full;
	wire  [10:0]  result_exp_all_one;
	wire  [11:0]  result_exp_not_zero;
	wire  round_bit;
	wire  round_carry;
	wire  [51:0]  sticky_bit;

	// synopsys translate_off
	initial
		dataa_exp_all_one_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dataa_exp_all_one_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   dataa_exp_all_one_ff_p1 <= dataa_exp_all_one[10];
	// synopsys translate_off
	initial
		dataa_exp_not_zero_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dataa_exp_not_zero_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   dataa_exp_not_zero_ff_p1 <= dataa_exp_not_zero[10];
	// synopsys translate_off
	initial
		dataa_man_not_zero_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dataa_man_not_zero_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p1 <= dataa_man_not_zero[25];
	// synopsys translate_off
	initial
		dataa_man_not_zero_ff_p2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dataa_man_not_zero_ff_p2 <= 1'b0;
		else if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p2 <= dataa_man_not_zero[51];
	// synopsys translate_off
	initial
		datab_exp_all_one_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) datab_exp_all_one_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   datab_exp_all_one_ff_p1 <= datab_exp_all_one[10];
	// synopsys translate_off
	initial
		datab_exp_not_zero_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) datab_exp_not_zero_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   datab_exp_not_zero_ff_p1 <= datab_exp_not_zero[10];
	// synopsys translate_off
	initial
		datab_man_not_zero_ff_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) datab_man_not_zero_ff_p1 <= 1'b0;
		else if  (clk_en == 1'b1)   datab_man_not_zero_ff_p1 <= datab_man_not_zero[25];
	// synopsys translate_off
	initial
		datab_man_not_zero_ff_p2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) datab_man_not_zero_ff_p2 <= 1'b0;
		else if  (clk_en == 1'b1)   datab_man_not_zero_ff_p2 <= datab_man_not_zero[51];
	// synopsys translate_off
	initial
		delay_exp2_bias = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) delay_exp2_bias <= 13'b0;
		else if  (clk_en == 1'b1)   delay_exp2_bias <= delay_exp_bias;
	// synopsys translate_off
	initial
		delay_exp_bias = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) delay_exp_bias <= 13'b0;
		else if  (clk_en == 1'b1)   delay_exp_bias <= wire_exp_bias_subtr_result;
	// synopsys translate_off
	initial
		delay_man_product_msb = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) delay_man_product_msb <= 1'b0;
		else if  (clk_en == 1'b1)   delay_man_product_msb <= delay_man_product_msb_p0;
	// synopsys translate_off
	initial
		delay_man_product_msb_p0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) delay_man_product_msb_p0 <= 1'b0;
		else if  (clk_en == 1'b1)   delay_man_product_msb_p0 <= wire_man_product2_mult_result[105];
	// synopsys translate_off
	initial
		exp_add_p1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_add_p1 <= 12'b0;
		else if  (clk_en == 1'b1)   exp_add_p1 <= wire_exp_add_adder_result;
	// synopsys translate_off
	initial
		exp_result_ff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_result_ff <= 11'b0;
		else if  (clk_en == 1'b1)   exp_result_ff <= ((inf_num & {11{((exp_is_inf | input_is_infinity_ff1) | input_is_nan_ff1)}}) | ((wire_exp_adj_adder_result[10:0] & {11{(~ exp_is_zero)}}) & {11{input_not_zero_ff1}}));
	// synopsys translate_off
	initial
		input_is_infinity_dffe_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_dffe_0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (~ (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2))) | (datab_exp_all_one_ff_p1 & (~ (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2))));
	// synopsys translate_off
	initial
		input_is_infinity_dffe_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_dffe_1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_dffe_1 <= input_is_infinity_dffe_0;
	// synopsys translate_off
	initial
		input_is_infinity_ff1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_ff1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_ff1 <= input_is_infinity_dffe_1;
	// synopsys translate_off
	initial
		input_is_nan_dffe_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_dffe_0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2)) | (datab_exp_all_one_ff_p1 & (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2)));
	// synopsys translate_off
	initial
		input_is_nan_dffe_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_dffe_1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_dffe_1 <= input_is_nan_dffe_0;
	// synopsys translate_off
	initial
		input_is_nan_ff1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_ff1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_ff1 <= input_is_nan_dffe_1;
	// synopsys translate_off
	initial
		input_not_zero_dffe_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_not_zero_dffe_0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_not_zero_dffe_0 <= (dataa_exp_not_zero_ff_p1 & datab_exp_not_zero_ff_p1);
	// synopsys translate_off
	initial
		input_not_zero_dffe_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_not_zero_dffe_1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_not_zero_dffe_1 <= input_not_zero_dffe_0;
	// synopsys translate_off
	initial
		input_not_zero_ff1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_not_zero_ff1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_not_zero_ff1 <= input_not_zero_dffe_1;
	// synopsys translate_off
	initial
		lsb_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lsb_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   lsb_dffe <= lsb_bit;
	// synopsys translate_off
	initial
		man_result_ff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_result_ff <= 52'b0;
		else if  (clk_en == 1'b1)   man_result_ff <= {((((((man_result_round[51] & input_not_zero_ff1) & (~ input_is_infinity_ff1)) & (~ exp_is_inf)) & (~ exp_is_zero)) | (input_is_infinity_ff1 & (~ input_not_zero_ff1))) | input_is_nan_ff1), (((((man_result_round[50:0] & {51{input_not_zero_ff1}}) & {51{(~ input_is_infinity_ff1)}}) & {51{(~ exp_is_inf)}}) & {51{(~ exp_is_zero)}}) & {51{(~ input_is_nan_ff1)}})};
	// synopsys translate_off
	initial
		man_round_p = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_round_p <= 53'b0;
		else if  (clk_en == 1'b1)   man_round_p <= man_shift_full[53:1];
	// synopsys translate_off
	initial
		man_round_p2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_round_p2 <= 54'b0;
		else if  (clk_en == 1'b1)   man_round_p2 <= wire_man_round_adder_result;
	// synopsys translate_off
	initial
		round_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) round_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   round_dffe <= round_bit;
	// synopsys translate_off
	initial
		sign_node_ff0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_node_ff0 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_node_ff0 <= (dataa[63] ^ datab[63]);
	// synopsys translate_off
	initial
		sign_node_ff1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_node_ff1 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_node_ff1 <= sign_node_ff0[0:0];
	// synopsys translate_off
	initial
		sign_node_ff2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_node_ff2 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_node_ff2 <= sign_node_ff1[0:0];
	// synopsys translate_off
	initial
		sign_node_ff3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_node_ff3 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_node_ff3 <= sign_node_ff2[0:0];
	// synopsys translate_off
	initial
		sign_node_ff4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_node_ff4 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_node_ff4 <= sign_node_ff3[0:0];
	// synopsys translate_off
	initial
		sticky_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sticky_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   sticky_dffe <= sticky_bit[51];
	assign
		wire_exp_add_adder_result_int = {wire_exp_add_adder_dataa, wire_exp_add_adder_cin} + {wire_exp_add_adder_datab, wire_exp_add_adder_cin};
	//synopsys translate_off
	initial
		wire_exp_add_adder_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_exp_add_adder_clock or posedge wire_exp_add_adder_aclr)
		if (wire_exp_add_adder_aclr == 1'b1) wire_exp_add_adder_pipeline_dffe_Q <= 12'b0;
		else if (wire_exp_add_adder_clken == 1'b1) wire_exp_add_adder_pipeline_dffe_Q <= wire_exp_add_adder_pipeline_dffe_D;
	assign
		wire_exp_add_adder_result = wire_exp_add_adder_pipeline_dffe_Q[11:0],
		wire_exp_add_adder_pipeline_dffe_D[11:0] = wire_exp_add_adder_result_int[12:1];
	assign
		wire_exp_add_adder_aclr = aclr,
		wire_exp_add_adder_cin = 1'b0,
		wire_exp_add_adder_clken = clk_en,
		wire_exp_add_adder_clock = clock,
		wire_exp_add_adder_dataa = {1'b0, dataa[62:52]},
		wire_exp_add_adder_datab = {1'b0, datab[62:52]};
	assign
		wire_exp_adj_adder_result_int = {wire_exp_adj_adder_dataa, wire_exp_adj_adder_cin} + {wire_exp_adj_adder_datab, wire_exp_adj_adder_cin};
	assign
		wire_exp_adj_adder_result = wire_exp_adj_adder_result_int[13:1];
	assign
		wire_exp_adj_adder_cin = 1'b0,
		wire_exp_adj_adder_dataa = delay_exp2_bias,
		wire_exp_adj_adder_datab = expmod;
	assign
		wire_exp_bias_subtr_result = wire_exp_bias_subtr_dataa - wire_exp_bias_subtr_datab;
	assign
		wire_exp_bias_subtr_dataa = {1'b0, exp_add_p1[11:0]},
		wire_exp_bias_subtr_datab = {bias[12:0]};
	assign
		wire_man_round_adder_result = wire_man_round_adder_dataa + wire_man_round_adder_datab;
	assign
		wire_man_round_adder_dataa = {1'b0, man_round_p},
		wire_man_round_adder_datab = {{53{1'b0}}, round_carry};
	ALTFP_MULa_mult   man_product2_mult
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa({1'b1, dataa[51:0]}),
	.datab({1'b1, datab[51:0]}),
	.result(wire_man_product2_mult_result));
	assign
		aclr = 1'b0,
		bias = {{3{1'b0}}, {10{1'b1}}},
		clk_en = 1'b1,
		dataa_exp_all_one = {(dataa[62] & dataa_exp_all_one[9]), (dataa[61] & dataa_exp_all_one[8]), (dataa[60] & dataa_exp_all_one[7]), (dataa[59] & dataa_exp_all_one[6]), (dataa[58] & dataa_exp_all_one[5]), (dataa[57] & dataa_exp_all_one[4]), (dataa[56] & dataa_exp_all_one[3]), (dataa[55] & dataa_exp_all_one[2]), (dataa[54] & dataa_exp_all_one[1]), (dataa[53] & dataa_exp_all_one[0]), dataa[52]},
		dataa_exp_not_zero = {(dataa[62] | dataa_exp_not_zero[9]), (dataa[61] | dataa_exp_not_zero[8]), (dataa[60] | dataa_exp_not_zero[7]), (dataa[59] | dataa_exp_not_zero[6]), (dataa[58] | dataa_exp_not_zero[5]), (dataa[57] | dataa_exp_not_zero[4]), (dataa[56] | dataa_exp_not_zero[3]), (dataa[55] | dataa_exp_not_zero[2]), (dataa[54] | dataa_exp_not_zero[1]), (dataa[53] | dataa_exp_not_zero[0]), dataa[52]},
		dataa_man_not_zero = {(dataa[51] | dataa_man_not_zero[50]), (dataa[50] | dataa_man_not_zero[49]), (dataa[49] | dataa_man_not_zero[48]), (dataa[48] | dataa_man_not_zero[47]), (dataa[47] | dataa_man_not_zero[46]), (dataa[46] | dataa_man_not_zero[45]), (dataa[45] | dataa_man_not_zero[44]), (dataa[44] | dataa_man_not_zero[43]), (dataa[43] | dataa_man_not_zero[42]), (dataa[42] | dataa_man_not_zero[41]), (dataa[41] | dataa_man_not_zero[40]), (dataa[40] | dataa_man_not_zero[39]), (dataa[39] | dataa_man_not_zero[38]), (dataa[38] | dataa_man_not_zero[37]), (dataa[37] | dataa_man_not_zero[36]), (dataa[36] | dataa_man_not_zero[35]), (dataa[35] | dataa_man_not_zero[34]), (dataa[34] | dataa_man_not_zero[33]), (dataa[33] | dataa_man_not_zero[32]), (dataa[32] | dataa_man_not_zero[31]), (dataa[31] | dataa_man_not_zero[30]), (dataa[30] | dataa_man_not_zero[29]), (dataa[29] | dataa_man_not_zero[28]), (dataa[28] | dataa_man_not_zero[27]), (dataa[27] | dataa_man_not_zero[26]), dataa[26], (dataa[25] | dataa_man_not_zero[24]), (dataa[24] | dataa_man_not_zero[23]), (dataa[23] | dataa_man_not_zero[22]), (dataa[22] | dataa_man_not_zero[21]), (dataa[21] | dataa_man_not_zero[20]), (dataa[20] | dataa_man_not_zero[19]), (dataa[19] | dataa_man_not_zero[18]), (dataa[18] | dataa_man_not_zero[17]), (dataa[17] | dataa_man_not_zero[16]), (dataa[16] | dataa_man_not_zero[15]), (dataa[15] | dataa_man_not_zero[14]), (dataa[14] | dataa_man_not_zero[13]), (dataa[13] | dataa_man_not_zero[12]), (dataa[12] | dataa_man_not_zero[11]), (dataa[11] | dataa_man_not_zero[10]), (dataa[10] | dataa_man_not_zero[9]), (dataa[9] | dataa_man_not_zero[8]), (dataa[8] | dataa_man_not_zero[7]), (dataa[7] | dataa_man_not_zero[6]), (dataa[6] | dataa_man_not_zero[5]), (dataa[5] | dataa_man_not_zero[4]), (dataa[4] | dataa_man_not_zero[3]), (dataa[3] | dataa_man_not_zero[2]), (dataa[2] | dataa_man_not_zero[1]), (dataa[1] | dataa_man_not_zero[0]), dataa[0]},
		datab_exp_all_one = {(datab[62] & datab_exp_all_one[9]), (datab[61] & datab_exp_all_one[8]), (datab[60] & datab_exp_all_one[7]), (datab[59] & datab_exp_all_one[6]), (datab[58] & datab_exp_all_one[5]), (datab[57] & datab_exp_all_one[4]), (datab[56] & datab_exp_all_one[3]), (datab[55] & datab_exp_all_one[2]), (datab[54] & datab_exp_all_one[1]), (datab[53] & datab_exp_all_one[0]), datab[52]},
		datab_exp_not_zero = {(datab[62] | datab_exp_not_zero[9]), (datab[61] | datab_exp_not_zero[8]), (datab[60] | datab_exp_not_zero[7]), (datab[59] | datab_exp_not_zero[6]), (datab[58] | datab_exp_not_zero[5]), (datab[57] | datab_exp_not_zero[4]), (datab[56] | datab_exp_not_zero[3]), (datab[55] | datab_exp_not_zero[2]), (datab[54] | datab_exp_not_zero[1]), (datab[53] | datab_exp_not_zero[0]), datab[52]},
		datab_man_not_zero = {(datab[51] | datab_man_not_zero[50]), (datab[50] | datab_man_not_zero[49]), (datab[49] | datab_man_not_zero[48]), (datab[48] | datab_man_not_zero[47]), (datab[47] | datab_man_not_zero[46]), (datab[46] | datab_man_not_zero[45]), (datab[45] | datab_man_not_zero[44]), (datab[44] | datab_man_not_zero[43]), (datab[43] | datab_man_not_zero[42]), (datab[42] | datab_man_not_zero[41]), (datab[41] | datab_man_not_zero[40]), (datab[40] | datab_man_not_zero[39]), (datab[39] | datab_man_not_zero[38]), (datab[38] | datab_man_not_zero[37]), (datab[37] | datab_man_not_zero[36]), (datab[36] | datab_man_not_zero[35]), (datab[35] | datab_man_not_zero[34]), (datab[34] | datab_man_not_zero[33]), (datab[33] | datab_man_not_zero[32]), (datab[32] | datab_man_not_zero[31]), (datab[31] | datab_man_not_zero[30]), (datab[30] | datab_man_not_zero[29]), (datab[29] | datab_man_not_zero[28]), (datab[28] | datab_man_not_zero[27]), (datab[27] | datab_man_not_zero[26]), datab[26], (datab[25] | datab_man_not_zero[24]), (datab[24] | datab_man_not_zero[23]), (datab[23] | datab_man_not_zero[22]), (datab[22] | datab_man_not_zero[21]), (datab[21] | datab_man_not_zero[20]), (datab[20] | datab_man_not_zero[19]), (datab[19] | datab_man_not_zero[18]), (datab[18] | datab_man_not_zero[17]), (datab[17] | datab_man_not_zero[16]), (datab[16] | datab_man_not_zero[15]), (datab[15] | datab_man_not_zero[14]), (datab[14] | datab_man_not_zero[13]), (datab[13] | datab_man_not_zero[12]), (datab[12] | datab_man_not_zero[11]), (datab[11] | datab_man_not_zero[10]), (datab[10] | datab_man_not_zero[9]), (datab[9] | datab_man_not_zero[8]), (datab[8] | datab_man_not_zero[7]), (datab[7] | datab_man_not_zero[6]), (datab[6] | datab_man_not_zero[5]), (datab[5] | datab_man_not_zero[4]), (datab[4] | datab_man_not_zero[3]), (datab[3] | datab_man_not_zero[2]), (datab[2] | datab_man_not_zero[1]), (datab[1] | datab_man_not_zero[0]), datab[0]},
		exp_is_inf = (((~ wire_exp_adj_adder_result[12]) & wire_exp_adj_adder_result[11]) | ((~ wire_exp_adj_adder_result[11]) & result_exp_all_one[10])),
		exp_is_zero = (wire_exp_adj_adder_result[12] | (~ result_exp_not_zero[11])),
		expmod = {{11{1'b0}}, (delay_man_product_msb & man_round_p2[53]), (delay_man_product_msb ^ man_round_p2[53])},
		inf_num = {11{1'b1}},
		lsb_bit = man_shift_full[1],
		man_result_round = ((man_round_p2[52:0] & {53{(~ man_round_p2[53])}}) | (man_round_p2[53:1] & {53{man_round_p2[53]}})),
		man_shift_full = ((wire_man_product2_mult_result[104:51] & {54{(~ wire_man_product2_mult_result[105])}}) | (wire_man_product2_mult_result[105:52] & {54{wire_man_product2_mult_result[105]}})),
		result = {sign_node_ff4[0:0], exp_result_ff[10:0], man_result_ff[51:0]},
		result_exp_all_one = {(result_exp_all_one[9] & wire_exp_adj_adder_result[10]), (result_exp_all_one[8] & wire_exp_adj_adder_result[9]), (result_exp_all_one[7] & wire_exp_adj_adder_result[8]), (result_exp_all_one[6] & wire_exp_adj_adder_result[7]), (result_exp_all_one[5] & wire_exp_adj_adder_result[6]), (result_exp_all_one[4] & wire_exp_adj_adder_result[5]), (result_exp_all_one[3] & wire_exp_adj_adder_result[4]), (result_exp_all_one[2] & wire_exp_adj_adder_result[3]), (result_exp_all_one[1] & wire_exp_adj_adder_result[2]), (result_exp_all_one[0] & wire_exp_adj_adder_result[1]), wire_exp_adj_adder_result[0]},
		result_exp_not_zero = {(result_exp_not_zero[10] | wire_exp_adj_adder_result[11]), (result_exp_not_zero[9] | wire_exp_adj_adder_result[10]), (result_exp_not_zero[8] | wire_exp_adj_adder_result[9]), (result_exp_not_zero[7] | wire_exp_adj_adder_result[8]), (result_exp_not_zero[6] | wire_exp_adj_adder_result[7]), (result_exp_not_zero[5] | wire_exp_adj_adder_result[6]), (result_exp_not_zero[4] | wire_exp_adj_adder_result[5]), (result_exp_not_zero[3] | wire_exp_adj_adder_result[4]), (result_exp_not_zero[2] | wire_exp_adj_adder_result[3]), (result_exp_not_zero[1] | wire_exp_adj_adder_result[2]), (result_exp_not_zero[0] | wire_exp_adj_adder_result[1]), wire_exp_adj_adder_result[0]},
		round_bit = man_shift_full[0],
		round_carry = (round_dffe & (lsb_dffe | sticky_dffe)),
		sticky_bit = {(sticky_bit[50] | (wire_man_product2_mult_result[105] & wire_man_product2_mult_result[51])), (sticky_bit[49] | wire_man_product2_mult_result[50]), (sticky_bit[48] | wire_man_product2_mult_result[49]), (sticky_bit[47] | wire_man_product2_mult_result[48]), (sticky_bit[46] | wire_man_product2_mult_result[47]), (sticky_bit[45] | wire_man_product2_mult_result[46]), (sticky_bit[44] | wire_man_product2_mult_result[45]), (sticky_bit[43] | wire_man_product2_mult_result[44]), (sticky_bit[42] | wire_man_product2_mult_result[43]), (sticky_bit[41] | wire_man_product2_mult_result[42]), (sticky_bit[40] | wire_man_product2_mult_result[41]), (sticky_bit[39] | wire_man_product2_mult_result[40]), (sticky_bit[38] | wire_man_product2_mult_result[39]), (sticky_bit[37] | wire_man_product2_mult_result[38]), (sticky_bit[36] | wire_man_product2_mult_result[37]), (sticky_bit[35] | wire_man_product2_mult_result[36]), (sticky_bit[34] | wire_man_product2_mult_result[35]), (sticky_bit[33] | wire_man_product2_mult_result[34]), (sticky_bit[32] | wire_man_product2_mult_result[33]), (sticky_bit[31] | wire_man_product2_mult_result[32]), (sticky_bit[30] | wire_man_product2_mult_result[31]), (sticky_bit[29] | wire_man_product2_mult_result[30]), (sticky_bit[28] | wire_man_product2_mult_result[29]), (sticky_bit[27] | wire_man_product2_mult_result[28]), (sticky_bit[26] | wire_man_product2_mult_result[27]), (sticky_bit[25] | wire_man_product2_mult_result[26]), (sticky_bit[24] | wire_man_product2_mult_result[25]), (sticky_bit[23] | wire_man_product2_mult_result[24]), (sticky_bit[22] | wire_man_product2_mult_result[23]), (sticky_bit[21] | wire_man_product2_mult_result[22]), (sticky_bit[20] | wire_man_product2_mult_result[21]), (sticky_bit[19] | wire_man_product2_mult_result[20]), (sticky_bit[18] | wire_man_product2_mult_result[19]), (sticky_bit[17] | wire_man_product2_mult_result[18]), (sticky_bit[16] | wire_man_product2_mult_result[17]), (sticky_bit[15] | wire_man_product2_mult_result[16]), (sticky_bit[14] | wire_man_product2_mult_result[15]
), (sticky_bit[13] | wire_man_product2_mult_result[14]), (sticky_bit[12] | wire_man_product2_mult_result[13]), (sticky_bit[11] | wire_man_product2_mult_result[12]), (sticky_bit[10] | wire_man_product2_mult_result[11]), (sticky_bit[9] | wire_man_product2_mult_result[10]), (sticky_bit[8] | wire_man_product2_mult_result[9]), (sticky_bit[7] | wire_man_product2_mult_result[8]), (sticky_bit[6] | wire_man_product2_mult_result[7]), (sticky_bit[5] | wire_man_product2_mult_result[6]), (sticky_bit[4] | wire_man_product2_mult_result[5]), (sticky_bit[3] | wire_man_product2_mult_result[4]), (sticky_bit[2] | wire_man_product2_mult_result[3]), (sticky_bit[1] | wire_man_product2_mult_result[2]), (sticky_bit[0] | wire_man_product2_mult_result[1]), wire_man_product2_mult_result[0]};
endmodule //ALTFP_MULa_altfp_mult
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module ALTFP_MULa (
	clock,
	dataa,
	datab,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[63:0]  dataa;
	input	[63:0]  datab;
	output	[63:0]  result;

	wire [63:0] sub_wire0;
	wire [63:0] result = sub_wire0[63:0];

	ALTFP_MULa_altfp_mult	ALTFP_MULa_altfp_mult_component (
				.clock (clock),
				.dataa (dataa),
				.datab (datab),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: PRIVATE: FPM_FORMAT STRING "Double"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: DEDICATED_MULTIPLIER_CIRCUITRY STRING "YES"
// Retrieval info: CONSTANT: DENORMAL_SUPPORT STRING "NO"
// Retrieval info: CONSTANT: EXCEPTION_HANDLING STRING "NO"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_HINT STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altfp_mult"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "5"
// Retrieval info: CONSTANT: REDUCED_FUNCTIONALITY STRING "NO"
// Retrieval info: CONSTANT: ROUNDING STRING "TO_NEAREST"
// Retrieval info: CONSTANT: WIDTH_EXP NUMERIC "11"
// Retrieval info: CONSTANT: WIDTH_MAN NUMERIC "52"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: USED_PORT: dataa 0 0 64 0 INPUT NODEFVAL "dataa[63..0]"
// Retrieval info: CONNECT: @dataa 0 0 64 0 dataa 0 0 64 0
// Retrieval info: USED_PORT: datab 0 0 64 0 INPUT NODEFVAL "datab[63..0]"
// Retrieval info: CONNECT: @datab 0 0 64 0 datab 0 0 64 0
// Retrieval info: USED_PORT: result 0 0 64 0 OUTPUT NODEFVAL "result[63..0]"
// Retrieval info: CONNECT: result 0 0 64 0 @result 0 0 64 0
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT.v TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT.qip TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT.bsf TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT_inst.v TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT_bb.v TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT.inc TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTFP_MULT.cmp TRUE TRUE
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX NUMERIC "1"
// Retrieval info: LIB_FILE: lpm
